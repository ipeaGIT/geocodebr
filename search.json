[{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"instalação","dir":"Articles","previous_headings":"","what":"Instalação","title":"Introdução ao geocodebr","text":"versão estável pacote pode ser baixada CRAN com o comando seguir: Caso prefira, versão em desenvolvimento também pode ser usada. Para isso, use o seguinte comando:","code":"install.packages(\"geocodebr\") # install.packages(\"remotes\") remotes::install_github(\"ipeaGIT/geocodebr\")"},{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"utilização","dir":"Articles","previous_headings":"","what":"Utilização","title":"Introdução ao geocodebr","text":"principal função pacote é geocode(), que recebe uma tabela (data.frame) de endereços como entrada e retorna mesma tabela geolocalizada como saída. Por padrão, tabela de output é acrescida de colunas com latitude e longitude encontradas para cada endereço correspondido, bem como de colunas indicando o nível de precisão dos resultados. exemplo abaixo, utilizamos um pequeno conjunto de dados que contém endereços com problemas comuns, como informações ausentes e campos digitados incorretamente, para demonstrar o uso da função: Nota: geocode() requer que os dados CNEFE estejam armazenados localmente. total, esses dados somam cerca de 5,5 GB, o que pode fazer com que primeira execução da função demore, já que é necessário baixar os dados para sua máquina. Esses dados, entanto, são salvos de forma persistente, logo não é preciso baixá-los mais que uma vez. Note que exemplo acima nós também utilizamos função definir_campos(), que facilita o processo de especificação da correspondência entre colunas da tabela e os campos esperados de cada endereço. Com ela, nós definimos que coluna que contém informação de logradouro se chama \"nm_logradouro\", que coluna de número se chama \"Numero\", etc. Essa função é opcional, e poderíamos simplesmente passar um vetor de caracteres formato c(logradouro = \"nm_logradouro\", numero = \"Numero\", ...). definir_campos(), entanto, realiza alguns testes nas colunas e na tabela, garantindo que o input passado esteja corretamente formatado. coordendas espaciais resultado usam o sistema de referência SIRGAS2000, padrão adotado pelo IBGE em todo o Brasil. Cada par de coordenadas encontrado pode ser classificado conforme o seu grau de precisão (coluna precisao) e os campos endereço utilizados para encontrá-lo (tipo_resultado). seção seguir apresenta mais informações sobre essas colunas.","code":"library(geocodebr)  ends <- read.csv(system.file(\"extdata/small_sample.csv\", package = \"geocodebr\"))  campos <- definir_campos(   estado = \"nm_uf\",   municipio = \"nm_municipio\",   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   localidade = \"Bairro\" )  ends_geo <- geocode(ends, campos_endereco = campos, verboso = FALSE)  head(ends_geo) #>   id            nm_logradouro Numero       Cep               Bairro #> 1  1 Rua Maria Lucia Pacifico     17 26042-730           Santa Rita #> 2  2      Rua Leopoldina Tome     46 25030-050           Centenario #> 3  3          Rua Dona Judite      0 23915-700          Caputera II #> 4  4     Rua Alexandre Amaral      0 23098-120           Santissimo #> 5  5                Avenida E    300 23860-000         Praia Grande #> 6  6      Rua Princesa Isabel    263           Estacao Experimental #>      nm_municipio code_muni nm_uf        lat       lon tipo_resultado #> 1     Nova Iguacu   3303500    RJ -22.695496 -43.47118           en01 #> 2 Duque de Caxias   3301702    RJ -22.779174 -43.31134           en01 #> 3  Angra dos Reis   3300100    RJ -22.978837 -44.20848           er01 #> 4  Rio de Janeiro   3304557    RJ -22.868992 -43.51150           er01 #> 5     Mangaratiba   3302601    RJ -22.929864 -43.97214           en01 #> 6      Rio Branco   1200401    AC  -9.963436 -67.83559           en03 #>     precisao #> 1     numero #> 2     numero #> 3 logradouro #> 4 logradouro #> 5     numero #> 6     numero"},{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"grau-de-precisão-dos-resultados","dir":"Articles","previous_headings":"Utilização","what":"Grau de precisão dos resultados","title":"Introdução ao geocodebr","text":"coordenadas incluídas resultado da geocode() são calculadas partir da média das coordenadas dos endereços CNEFE que correspondem cada um dos endereços de input. correspondência entre os endereços de entrada e os CNEFE pode ser feita com base em diferentes combinações de campos, impactando, assim, na precisão resultado retornado. caso mais rigoroso, função encontra uma correspondência determinística para cada um dos campos endereço (estado, município, logradouro, número, CEP e localidade). Pense, por exemplo, em um prédio com vários apartamentos, cuja única variação endereço se dá nível de apartamento: o resultado, nesse caso, é média das coordenadas dos apartamentos, que podem diferir ligeiramente. Em um caso menos rigoroso, qual são encontradas correspondências apenas para os campos de estado, município, logradouro e localidade, função calcula coordenadas médias de todos os endereços CNEFE que se encontram na mesma rua e na mesma localidade. O resultado, portanto, é agregado nível de rua, tendendo para extremidade logradouro com maior concentração de endereços. coluna precisao se refere ao nível de agregação das coordenadas CNEFE utilizadas pela geocode(). função sempre retorna o resultado de maior precisão possível - ou seja, ela só vai procurar endereços com precisão \"numero_aproximado\" (ver seguir) caso não tenha encontrado correspondência de precisão \"numero\". coordenadas calculadas podem ser classificadas em seis diferentes categorias de precisão: \"numero\" - calculadas partir de endereços que compartilham o mesmo logradouro e número; \"numero_aproximado\" - calculadas partir de endereços que compartilham o mesmo logradouro, mas número de input não encontra correspondência exata CNEFE e sua localização é calculada partir de uma interpolação espacial; \"logradouro\" - calculadas partir de endereços que compartilham o mesmo logradouro (número de input está ausente ou é S/N); \"cep\" - calculadas partir de endereços que compartilham o mesmo CEP; \"localidade\" - calculadas partir de endereços que compartilham mesma localidade; \"municipio\" - calculadas partir de endereços que compartilham o mesmo município. coluna tipo_resultado fornece informações mais detalhadas sobre os campos de endereço utilizados cálculo das coordenadas de cada endereço de entrada. Cada categoria é nomeada partir de um código de quatro caracteres: o primeiro, sempre e ou p, determina se correspondência foi feita de forma determinística (e) ou probabilística (p) - segunda opção ainda não foi implementada pacote, mas é planejada em versões futuras; o segundo faz menção à categoria de precisao na qual o resultado foi classificado (n para \"numero\", para \"numero_aproximado\", r para \"logradouro\", c para \"cep\", b para \"localidade\" e m para \"municipio\"); o terceiro e o quarto designam classificação de cada categoria dentro de seu grupo - via de regra, quanto menor o número formado por esses caracteres, mais precisa são coordenadas calculadas. categorias de tipo_resultado são listadas abaixo, junto às categorias de precisao qual elas estão associadas: en01 - logradouro, numero, cep e localidade en02 - logradouro, numero e cep en03 - logradouro, numero e localidade en04 - logradouro e numero pn01 - logradouro, numero, cep e localidade pn02 - logradouro, numero e cep pn03 - logradouro, numero e localidade pn04 - logradouro e numero ei01 - logradouro, numero, cep e localidade ei02 - logradouro, numero e cep ei03 - logradouro, numero e localidade ei04 - logradouro e numero pi01 - logradouro, numero, cep e localidade pi02 - logradouro, numero e cep pi03 - logradouro, numero e localidade pi04 - logradouro e numero er01 - logradouro, cep e localidade er02 - logradouro e cep er03 - logradouro e localidade er04 - logradouro pr01 - logradouro, cep e localidade pr02 - logradouro e cep pr03 - logradouro e localidade pr04 - logradouro ec01 - municipio, cep, localidade ec02 - municipio, cep eb01 - municipio, localidade em01 - municipio Endereços não encontrados são retornados com latitude, longitude, precisão e tipo de resultado NA. Nota: categorias de tipo_resultado que começam com ‘p’ utilizam correspondência probabilística campo logradouro, enquanto os tipos que começam com ‘e’ utilizam apenas correspondência determinística. categorias de tipo_resultado que usam correspondência probabilística ainda não estão implementados pacote geocodebr.","code":""},{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"cache-de-dados","dir":"Articles","previous_headings":"Utilização","what":"Cache de dados","title":"Introdução ao geocodebr","text":"Como comentado anteriormente, os dados CNEFE são baixados na primeira vez que geocode() é executada. Esses dados ficam salvos cache pacote e não precisam ser baixados novamente. O pacote inclui algumas funções que ajudam gerenciar o cache: listar_pasta_cache() - retorna o endereço cache na sua máquina, onde os dados CNEFE estão salvos; definir_pasta_cache() - define uma pasta personalizada para ser usada como cache. Essa configuração é persistente entre diferentes sessões R; listar_dados_cache() - lista todos os arquivos armazenados cache; deletar_pasta_cache() - exclui pasta de cache, bem como todos os arquivos que estavam armazenados dentro dela. Após rodar o código desta vignette, é provável que o seu cache esteja configurado como seguir:","code":"listar_pasta_cache() #> [1] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0\"  listar_dados_cache() #>  [1] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_cep_localidade.parquet\"                   #>  [2] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_cep.parquet\"                              #>  [3] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_localidade.parquet\"                       #>  [4] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_cep_localidade.parquet\"        #>  [5] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_cep.parquet\"                   #>  [6] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_localidade.parquet\"            #>  [7] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_numero_cep_localidade.parquet\" #>  [8] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_numero_cep.parquet\"            #>  [9] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_numero_localidade.parquet\"     #> [10] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_numero.parquet\"                #> [11] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro.parquet\"                       #> [12] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio.parquet\""},{"path":"https://ipeagit.github.io/geocodebr/articles/geocoding_pt.html","id":"geocodificação-de-endereços-para-coordenadas-espaciais","dir":"Articles","previous_headings":"","what":"Geocodificação: de endereços para coordenadas espaciais","title":"Geolocalização com geocodebr","text":"Uma vez que você tenha uma tabela (data.frame) com endereços, geolocalização dos dados com {geocodebr} pode ser feita em dois passos simples: O primeiro passo é utilizar função definir_campos() para declarar os nomes das colunas seu data.frame que correspondem cada campo dos endereços. O segundo passo é utilizar função geocode() para encontrar coordenadas geográficas dos endereços de entrada. obs. Note que na primeira vez que o usuário usa essa fnução, {geocodebr} irá baixar alguns arquivos de referência e armaneza-los localmente. Assim, esses dados só precisam ser baixados uma única vez. Mais informações sobr o cache dos dados abaixo. coordendas espaciais output usam sistema de referência ofical Brasil: SIRGAS2000, CRS(4674). Os resultados {geocodebr} são classificados em seis amplas categorias de precisão, dependendo de quão exatamente cada endereço de entrada foi correspondido com os dados CNEFE. O grau de precisão é indicado em duas colunas da tabela de output: precisao e tipo_resultado. Mais informações abaixo.","code":"library(geocodebr)  # leitura de dados de input input_df <- read.csv(system.file(\"extdata/small_sample.csv\", package = \"geocodebr\"))  # 1o passo: indicar nome das colunas correspondento aos campos de endereço fields <- geocodebr::definir_campos(   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   localidade = \"Bairro\",   municipio = \"nm_municipio\",   estado = \"nm_uf\"   ) # 2o passo: geolocalização df <- geocodebr::geocode(   enderecos = input_df,   campos_endereco = fields,   resultado_completo = FALSE,   verboso = TRUE,   cache = TRUE,   n_cores = 1   ) #> ℹ Padronizando endereços de entrada #> ℹ Geolocalizando endereços #> Endereços processados: 0/27 ■                                  0% - Procurando … #>  #> Endereços processados: 5/27 ■■■■■■■                           19% - Procurando … #>  #> Endereços processados: 6/27 ■■■■■■■■                          22% - Procurando … #>  #> Endereços processados: 8/27 ■■■■■■■■■■                        30% - Procurando … #>  #> Endereços processados: 9/27 ■■■■■■■■■■■                       33% - Procurando … #>  #> Endereços processados: 10/27 ■■■■■■■■■■■■                      37% - Procurando… #>  #> Endereços processados: 11/27 ■■■■■■■■■■■■■                     41% - Procurando… #>  #> Endereços processados: 12/27 ■■■■■■■■■■■■■■                    44% - Procurando… #>  #> Endereços processados: 13/27 ■■■■■■■■■■■■■■■                   48% - Procurando… #>  #> Endereços processados: 17/27 ■■■■■■■■■■■■■■■■■■■■              63% - Procurando… #>  #> Endereços processados: 18/27 ■■■■■■■■■■■■■■■■■■■■■             67% - Procurando… #>  #> Endereços processados: 19/27 ■■■■■■■■■■■■■■■■■■■■■■            70% - Procurando… #>  #> Endereços processados: 20/27 ■■■■■■■■■■■■■■■■■■■■■■■           74% - Procurando… #>  #> Endereços processados: 23/27 ■■■■■■■■■■■■■■■■■■■■■■■■■■■       85% - Procurando… #>  #> Endereços processados: 24/27 ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      89% - Procurando… #>  #> Endereços processados: 25/27 ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■     93% - Procurando… #>  #> Endereços processados: 27/27 ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% - Fim!  head(df) #>   id            nm_logradouro Numero       Cep               Bairro #> 1  1 Rua Maria Lucia Pacifico     17 26042-730           Santa Rita #> 2  2      Rua Leopoldina Tome     46 25030-050           Centenario #> 3  3          Rua Dona Judite      0 23915-700          Caputera II #> 4  4     Rua Alexandre Amaral      0 23098-120           Santissimo #> 5  5                Avenida E    300 23860-000         Praia Grande #> 6  6      Rua Princesa Isabel    263           Estacao Experimental #>      nm_municipio code_muni nm_uf        lat       lon tipo_resultado #> 1     Nova Iguacu   3303500    RJ -22.695496 -43.47118           en01 #> 2 Duque de Caxias   3301702    RJ -22.779174 -43.31134           en01 #> 3  Angra dos Reis   3300100    RJ -22.978837 -44.20848           er01 #> 4  Rio de Janeiro   3304557    RJ -22.868992 -43.51150           er01 #> 5     Mangaratiba   3302601    RJ -22.929864 -43.97214           en01 #> 6      Rio Branco   1200401    AC  -9.963436 -67.83559           en03 #>     precisao #> 1     numero #> 2     numero #> 3 logradouro #> 4 logradouro #> 5     numero #> 6     numero"},{"path":"https://ipeagit.github.io/geocodebr/articles/geocoding_pt.html","id":"categorias-de-precisão-precisao","dir":"Articles","previous_headings":"","what":"Categorias de Precisão: precisao","title":"Geolocalização com geocodebr","text":"Os resultados {geocodebr} são classificados em seis amplas categorias de precisao: “numero” “numero_aproximado” “logradouro” “cep” “localidade” “municipio” NA (não encontrado) Cada nível de precisão pode ser desagregado em tipos de correspondência mais refinados.","code":""},{"path":"https://ipeagit.github.io/geocodebr/articles/geocoding_pt.html","id":"tipo-de-correspondência-tipo_resultado","dir":"Articles","previous_headings":"Categorias de Precisão: precisao","what":"Tipo de Correspondência: tipo_resultado","title":"Geolocalização com geocodebr","text":"coluna tipo_resultado fornece informações mais detalhadas sobre como exatamente cada endereço de entrada foi encontrado CNEFE. Em cada categoria, o {geocodebr} calcula média da latitude e longitude dos endereços incluídos CNEFE que correspondem ao endereço de entrada, com base em combinações de diferentes campos. caso mais rigoroso, por exemplo, função encontra uma correspondência determinística para todos os campos de um dado endereço (\"estado\", \"municipio\", \"logradouro\", \"numero\", \"cep\", \"localidade\"). Pense, por exemplo, em um prédio com vários apartamentos que correspondem ao mesmo endereço de rua e número. Nesse caso, coordenadas dos apartamentos podem diferir ligeiramente, e o {geocodebr} calcula média dessas coordenadas. Em um caso menos rigoroso, qual apenas os campos (\"estado\", \"municipio\", \"logradouro\", \"localidade\") são encontrados, o {geocodebr} calcula coordenadas médias de todos os endereços CNEFE ao longo daquela rua e que se encontram na mesma localidade/bairro. Assim, coordenadas de resultado tendem ser o ponto médio trecho daquela rua que passa dentro daquela localidade/bairro. lista completa dos níveis de precisão (precisao), suas categorias de tipo de correspondência (tipo_resultado) e os campos de endereço considerados em cada categoria estão descritos abaixo: en01: logradouro, numero, cep e localidade en02: logradouro, numero e cep en03: logradouro, numero e localidade en04: logradouro e numero pn01: logradouro, numero, cep e localidade pn02: logradouro, numero e cep pn03: logradouro, numero e localidade pn04: logradouro e numero ei01: logradouro, numero, cep e localidade ei02: logradouro, numero e cep ei03: logradouro, numero e localidade ei04: logradouro e numero pi01: logradouro, numero, cep e localidade pi02: logradouro, numero e cep pi03: logradouro, numero e localidade pi04: logradouro e numero er01: logradouro, cep e localidade er02: logradouro e cep er03: logradouro e localidade er04: logradouro pr01: logradouro, cep e localidade pr02: logradouro e cep pr03: logradouro e localidade pr04: logradouro ec01: municipio, cep, localidade ec02: municipio, cep eb01: municipio, localidade em01: municipio Nota: categorias de tipo_resultado que começam com ‘p’ utilizam correspondência probabilística campo logradouro, enquanto os tipos que começam com ‘e’ utilizam apenas correspondência determinística. categorias de tipo_resultado que usam correspondência probabilística ainda não estão implementados pacote geocodebr.","code":""},{"path":"https://ipeagit.github.io/geocodebr/articles/geocoding_pt.html","id":"cache-de-dados","dir":"Articles","previous_headings":"","what":"Cache de Dados","title":"Geolocalização com geocodebr","text":"Na primeira vez que o usuário executar função geocode(), o {geocodebr} irá baixar alguns arquivos de referência e armazená-los localmente. Dessa forma, os dados precisam ser baixados apenas uma vez. Vale lembrar que esses arquivos requerem aproximadamente 4GB de espaço seu disco local. O pacote inclui seguintes funções para ajudar os usuários gerenciar os arquivos em cache: listar_pasta_cache(): retorna o caminho onde os dados em cache estão armazenados. Por padrão, os arquivos são armazenados diretório pacote. definir_pasta_cache(): define um diretório personalizado para ser utilizado. Essa configuração é persistente entre diferentes sessões R. listar_dados_cache(): lista todos os arquivos atualmente armazenados em cache. deletar_pasta_cache(): exclui todos os arquivos diretório de cache utilizado pelo {geocodebr}.","code":""},{"path":"https://ipeagit.github.io/geocodebr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Herszenhut. Author, maintainer. Rafael H. M. Pereira. Author. Ipea - Instituto de Pesquisa Econômica Aplicada. Copyright holder, funder.","code":""},{"path":"https://ipeagit.github.io/geocodebr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pereira RHM (2024). geocodebr: Download Data Brazil's Population Census.","code":"@Manual{,   title = {geocodebr: Download Data from Brazil's Population Census},   author = {Rafael H. M. Pereira},   year = {2024},   version = {v0.1.0}, }"},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"geocodebr-geolocalização-de-endereços-brasileiros","dir":"","previous_headings":"","what":"Geolocalização de Endereços Brasileiros","title":"Geolocalização de Endereços Brasileiros","text":"O {geocodebr} é um pacote computacional para geolicalização de endereços Brasileiros. O pacote oferece uma maneira simples e eficiente de geolicalizar endereços para encontrar suas coordenadas geográficas. O pacote é baseado em conjuntos de dados espaciais abertos de endereços brasileiros, utilizando principalmente o Cadastro Nacional de Endereços para Fins Estatísticos (CNEFE). O CNEFE é publicado pelo Instituto Brasileiro de Geografia e Estatística (IBGE). Atualmente, o pacote está disponível apenas em R.","code":""},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"instalação","dir":"","previous_headings":"","what":"Instalação","title":"Geolocalização de Endereços Brasileiros","text":"O pacote ainda não está disponível CRAN. Você pode instalar versão em desenvolvimento com o código abaixo:","code":"# install.packages(\"remotes\") remotes::install_github(\"ipeaGIT/geocodebr\")"},{"path":[]},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"geolocalização-de-endereços-para-coordenadas-espaciais","dir":"","previous_headings":"Utilização","what":"Geolocalização: de endereços para coordenadas espaciais","title":"Geolocalização de Endereços Brasileiros","text":"Uma que você possui uma tabela de dados (data.frame) com endereços Brasil, geolocalização desses dados com {geocodebr} pode ser feita em apenas dois passos: O primeiro passo é usar função definir_campos() para indicar os nomes das colunas seu data.frame que correspondem cada campo dos endereços. O segundo passo é usar função geocode() para encontrar coordenadas geográficas dos endereços de input. Os resultados {geocodebr} são classificados em seis categorias gerais de precisao, dependendo nível de exatidão com que cada endereço de input foi encontrado nos dados CNEFE. Para mais informações, consulte documentação da função ou vignette de geocode.","code":"library(geocodebr)  # carregando uma amostra de dados input_df <- read.csv(system.file(\"extdata/small_sample.csv\", package = \"geocodebr\"))  # Primeiro passo: inidicar o nome das colunas com cada campo dos enderecos campos <- geocodebr::definir_campos(   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   localidade = \"Bairro\",   municipio = \"nm_municipio\",   estado = \"nm_uf\"   )  # Segundo passo: geolocalizar df <- geocodebr::geocode(   enderecos = input_df,   campos_endereco = campos,   resultado_completo = FALSE,   verboso = FALSE,   cache = TRUE,   n_cores = 1   )"},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"geocode-reverso-de-coordenadas-espaciais-para-endereços","dir":"","previous_headings":"Utilização","what":"Geocode reverso: de coordenadas espaciais para endereços","title":"Geolocalização de Endereços Brasileiros","text":"em breve","code":""},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"projetos-relacionados","dir":"","previous_headings":"","what":"Projetos relacionados","title":"Geolocalização de Endereços Brasileiros","text":"Existem diversos pacotes de geolocalização disponíveis, muitos dos quais podem ser utilizados em R (listados abaixo). maioria dessas alternativas depende de softwares e conjuntos de dados comerciais, geralmente impondo limites de número de consultas gratuitas. Em contraste, principais vantagens {geocodebr} são que o pacote: () é completamente gratuito, permitindo consultas ilimitadas sem nenhum custo; (b) opera com alta velocidade e escalabilidade eficiente, permitindo geocodificar milhões de endereços em apenas alguns minutos, sem necessidade de infraestrutura computacional avançada ou de alto desempenho. {arcgisgeocode} {arcgeocoder}: utiliza serviço de geocode ArcGIS {nominatimlite}: baseado dados OSM {photon}: baseado dados OSM {tidygeocoder}: API para diversos servicos de geolocalização {googleway} {mapsapi}: interface para API Google Maps","code":""},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"nota-","dir":"","previous_headings":"","what":"Nota","title":"Geolocalização de Endereços Brasileiros","text":"Os dados originais CNEFE são coletados pelo Instituto Brasileiro de Geografia e Estatística (IBGE). O {geocodebr} foi desenvolvido por uma equipe Instituto de Pesquisa Econômica Aplicada (Ipea)","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a column with info of geocode match_type — add_precision_col","title":"Add a column with info of geocode match_type — add_precision_col","text":"Add column info geocode match_type","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a column with info of geocode match_type — add_precision_col","text":"","code":"add_precision_col(con, update_tb = NULL)"},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a column with info of geocode match_type — add_precision_col","text":"con db connection update_tb String. Name table updated con","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a column with info of geocode match_type — add_precision_col","text":"Adds new column table con","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely use arrow to open a Parquet file — arrow_open_dataset","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"function handles failure modes, including Parquet file corrupted.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"","code":"arrow_open_dataset(filename)"},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"filename local Parquet file","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"arrow::Dataset","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Message when caching file — cache_message","title":"Message when caching file — cache_message","text":"Message caching file","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Message when caching file — cache_message","text":"","code":"cache_message(   local_file = parent.frame()$local_file,   cache = parent.frame()$cache )"},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Message when caching file — cache_message","text":"local_file address file passed download_file function. cache Logical. Whether cached data used.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Message when caching file — cache_message","text":"message","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_geocodebr_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Build duckdb connection with CNEFE data set — create_geocodebr_db","title":"Build duckdb connection with CNEFE data set — create_geocodebr_db","text":"Builds duckdb connection CNEFE data set cache direcotry.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_geocodebr_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build duckdb connection with CNEFE data set — create_geocodebr_db","text":"","code":"create_geocodebr_db(db_path = \"tempdir\", n_cores = NULL)"},{"path":"https://ipeagit.github.io/geocodebr/reference/create_geocodebr_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build duckdb connection with CNEFE data set — create_geocodebr_db","text":"db_path Character. Defaults db_path = \"tempdir\" (default), duckdb connection created temporary directory. db_path = \"memory\", duckdb connection created RAM memory. n_cores Um número. O número de núcleos de CPU serem utilizados processamento dos dados. O padrão é 1.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_geocodebr_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build duckdb connection with CNEFE data set — create_geocodebr_db","text":"duckdb connection.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_index.html","id":null,"dir":"Reference","previous_headings":"","what":"create index — create_index","title":"create index — create_index","text":"create index","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create index — create_index","text":"","code":"create_index(con, tb, cols, operation, overwrite = TRUE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_campos.html","id":null,"dir":"Reference","previous_headings":"","what":"Especifica as colunas que descrevem os campos dos endereços — definir_campos","title":"Especifica as colunas que descrevem os campos dos endereços — definir_campos","text":"Cria um vetor de caracteres especificando colunas que representam cada campo endereço na tabela de endereços. Os campos estado e municipio são obrigatórios.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_campos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Especifica as colunas que descrevem os campos dos endereços — definir_campos","text":"","code":"definir_campos(   estado,   municipio,   logradouro = NULL,   numero = NULL,   cep = NULL,   localidade = NULL )"},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_campos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Especifica as colunas que descrevem os campos dos endereços — definir_campos","text":"estado Uma string. O nome da coluna que representa o estado endereço. Campo obrigatório. Na tabela de endereços, essa coluna pode conter os nomes dos estados por extenso, ou abrevição oficial dos estados com duas letras, e.g. \"\", \"SP\", \"DF\", \"RJ\". municipio Uma string. O nome da coluna que representa o município endereço. Campo obrigatório. Na tabela de endereços, essa coluna pode conter o nome dos municípios, ou o seu código IBGE de 7 dígitos. logradouro Uma string. O nome da coluna que representa o logradouro (endereço da rua) endereço. Pode ser NULL se o campo não estiver especificado na tabela de endereços. Na tabela de endereços, essa coluna deve incluir o tipo lograoduro, indicando se trata-se de uma \"Rua\" ou \"Avenida\" etc, por exemplo \"Avenida Presidente Getúlio Vargas\". Além disso, essa coluna não deve incluir o numero endereço, pois o número deve ser indicado numa coluna separada. numero Uma string. O nome da coluna que representa o número endereço. Pode ser NULL se o campo não estiver especificado na tabela de endereços. Na tabela de endereços, valores como 0 ou caracteres não numerciso como \"S/N\" ou \"10a\" são considerados como NA. cep Uma string. O nome da coluna que representa o CEP (Código de Endereçamento Postal) endereço. Pode ser NULL se o campo não estiver especificado na tabela de endereços. localidade Uma string. O nome da coluna que representa localidade (equivalente ao 'bairro' em áreas urbanas) endereço. Pode ser NULL se esse campo não estiver presente na tabela de endereços.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_campos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Especifica as colunas que descrevem os campos dos endereços — definir_campos","text":"Um vetor de caracteres qual os nomes são os campos endereço e os valores são colunas que os representam na tabela de endereços.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_campos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Especifica as colunas que descrevem os campos dos endereços — definir_campos","text":"","code":"definir_campos(   logradouro = \"Nome_logradouro\",   numero = \"Numero\",   cep = \"CEP\",   localidade = \"Bairro\",   municipio = \"Cidade\",   estado = \"UF\" ) #>        logradouro            numero               cep        localidade  #> \"Nome_logradouro\"          \"Numero\"             \"CEP\"          \"Bairro\"  #>         municipio            estado  #>          \"Cidade\"              \"UF\""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_pasta_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Define um diretório de cache para o geocodebr — definir_pasta_cache","title":"Define um diretório de cache para o geocodebr — definir_pasta_cache","text":"Define um diretório de cache para os dados geocodebr. Essa configuração é persistente entre sessões R.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_pasta_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define um diretório de cache para o geocodebr — definir_pasta_cache","text":"","code":"definir_pasta_cache(path = NULL)"},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_pasta_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define um diretório de cache para o geocodebr — definir_pasta_cache","text":"path Uma string. O caminho para o diretório usado para armazenar os dados em cache.  Se NULL (o padrão), o pacote usará um diretório versionado salvo dentro diretório retornado por tools::R_user_dir().","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_pasta_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define um diretório de cache para o geocodebr — definir_pasta_cache","text":"Retorna de forma invisível o caminho diretório de cache.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_pasta_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define um diretório de cache para o geocodebr — definir_pasta_cache","text":"","code":"definir_pasta_cache(tempdir()) #> ℹ Definido como pasta de cache /tmp/Rtmp3L7WIl.  # retoma pasta padrão do pacote definir_pasta_cache(NULL) #> ℹ Definido como pasta de cache #>   /home/runner/.cache/R/geocodebr/data_release_v0.1.0."},{"path":"https://ipeagit.github.io/geocodebr/reference/deletar_pasta_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Deletar pasta de cache do geocodebr — deletar_pasta_cache","title":"Deletar pasta de cache do geocodebr — deletar_pasta_cache","text":"Deleta todos arquivos da pasta cache.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/deletar_pasta_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deletar pasta de cache do geocodebr — deletar_pasta_cache","text":"","code":"deletar_pasta_cache()"},{"path":"https://ipeagit.github.io/geocodebr/reference/deletar_pasta_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deletar pasta de cache do geocodebr — deletar_pasta_cache","text":"Retorna de forma invisível o caminho diretório de cache.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/deletar_pasta_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deletar pasta de cache do geocodebr — deletar_pasta_cache","text":"","code":"if (FALSE) { # identical(TRUE, FALSE) deletar_pasta_cache() }"},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the CNEFE data set — download_cnefe","title":"Download the CNEFE data set — download_cnefe","text":"Downloads enriched version CNEFE (National Registry Addresses Statistical Purposes, portuguese) data set, purposefully built used package.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the CNEFE data set — download_cnefe","text":"","code":"download_cnefe(verboso = TRUE, cache = TRUE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the CNEFE data set — download_cnefe","text":"verboso logical. Whether display download progress bar. Defaults TRUE. cache Um valor lógico. Indica se os dados CNEFE devem ser salvos ou lidos cache, reduzindo o tempo de processamento em chamadas futuras. O padrão é TRUE. Quando FALSE, os dados CNEFE são baixados para um diretório temporário.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the CNEFE data set — download_cnefe","text":"Invisibly returns path directory data saved.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the CNEFE data set — download_cnefe","text":"","code":"download_cnefe(verboso = FALSE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":null,"dir":"Reference","previous_headings":"","what":"Geolocaliza endereços no Brasil — geocode","title":"Geolocaliza endereços no Brasil — geocode","text":"Geocodifica endereços brasileiros com base nos dados CNEFE. Os endereços de input devem ser passados como um data.frame, qual cada coluna descreve um campo endereço (logradouro, número, cep, etc). O resuldos dos endereços geolocalizados podem seguir diferentes níveis de precisão. Consulte abaixo seção \"Detalhes\" para mais informações. coordenadas de output utilizam o sistema de referência geodésico \"SIRGAS2000\", CRS(4674).","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geolocaliza endereços no Brasil — geocode","text":"","code":"geocode(   enderecos,   campos_endereco = definir_campos(),   resultado_completo = FALSE,   resultado_sf = FALSE,   verboso = TRUE,   cache = TRUE,   n_cores = 1 )"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geolocaliza endereços no Brasil — geocode","text":"enderecos Um data.frame. Os endereços serem geolocalizados. Cada coluna deve representar um campo endereço. campos_endereco Um vetor de caracteres. correspondência entre cada campo de endereço e o nome da coluna que o descreve na tabela enderecos. função definir_campos() auxilia na criação deste vetor e realiza algumas verificações nos dados de entrada. Campos de endereço passados como NULL serão ignorados, e função deve receber pelo menos um campo não nulo, além  dos campos \"estado\" e \"municipio\", que são obrigatórios. Note que o campo  \"localidade\" é equivalente 'bairro'. resultado_completo Lógico. Indica se o output deve incluir colunas adicionais, como o endereço encontrado de referência. Por padrão, é FALSE. resultado_sf Lógico. Indica se o resultado deve ser um objeto espacial da classe sf. Por padrão, é FALSE, e o resultado é um data.frame com colunas lat e lon. adicionais, como o endereço encontrado de referência. Por padrão, é FALSE. verboso Um valor lógico. Indica se barras de progresso e mensagens devem ser exibidas durante o download dos dados CNEFE e geocodificação dos endereços. O padrão é TRUE. cache Um valor lógico. Indica se os dados CNEFE devem ser salvos ou lidos cache, reduzindo o tempo de processamento em chamadas futuras. O padrão é TRUE. Quando FALSE, os dados CNEFE são baixados para um diretório temporário. n_cores Um número. O número de núcleos de CPU serem utilizados processamento dos dados. O padrão é 1.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geolocaliza endereços no Brasil — geocode","text":"Retorna o data.frame de input enderecos adicionado das colunas de latitude (lat) e longitude (lon), bem como colunas (precisao e tipo_resultado) que indicam o nível de precisão e o tipo de resultado. Alternativamente, o resultado pode ser um objeto sf.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geolocaliza endereços no Brasil — geocode","text":"Precisão dos resultados: Os resultados geocodebr são classificados em seis amplas categorias de precisao: \"numero\" \"numero_interpolado\" \"rua\" \"cep\" \"localidade\" \"municipio\" NA (não encontrado) Cada nível de precisão pode ser desagregado em tipos de correspondência mais refinados.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"tipos-de-resultados","dir":"Reference","previous_headings":"","what":"Tipos de resultados","title":"Geolocaliza endereços no Brasil — geocode","text":"coluna match_type fornece informações mais detalhadas sobre como exatamente cada endereço de entrada foi encontrado CNEFE. Em cada categoria,  o geocodebr calcula média da latitude e longitude dos endereços incluídos CNEFE que correspondem ao endereço de entrada, com base em combinações de diferentes campos. caso mais rigoroso, por exemplo, função encontra uma correspondência determinística para todos os campos de um dado endereço (\"estado\", \"municipio\", \"logradouro\", \"numero\", \"cep\", \"localidade\"). Pense, por exemplo, em um prédio com vários apartamentos que correspondem ao mesmo endereço de rua e número. Nesse caso, coordenadas dos apartamentos podem diferir ligeiramente, e o geocodebr calcula média dessas coordenadas. Em um caso menos rigoroso, qual apenas os campos (\"estado\", \"municipio\", \"logradouro\", \"localidade\") são encontrados, o geocodebr calcula coordenadas médias de todos os endereços CNEFE ao longo daquela rua e que se encontram na mesma localidade/bairro. Assim, coordenadas de resultado tendem ser o ponto médio trecho daquela rua que passa dentro daquela localidade/bairro. lista completa dos níveis de precisão (precisao), suas categorias de tipo de correspondência (tipo_resultado) e os campos de endereço considerados em cada categoria estão descritos abaixo: precisao: \"numero\" tipo_resultado: en01: logradouro, numero, cep e localidade en02: logradouro, numero e cep en03: logradouro, numero e localidade en04: logradouro e numero pn01: logradouro, numero, cep e localidade pn02: logradouro, numero e cep pn03: logradouro, numero e localidade pn04: logradouro e numero precisao: \"numero_aproximado\" tipo_resultado: ei01: logradouro, numero, cep e localidade ei02: logradouro, numero e cep ei03: logradouro, numero e localidade ei04: logradouro e numero pi01: logradouro, numero, cep e localidade pi02: logradouro, numero e cep pi03: logradouro, numero e localidade pi04: logradouro e numero precisao: \"logradouro\" (quando o número de entrada está faltando 'S/N') tipo_resultado: er01: logradouro, cep e localidade er02: logradouro e cep er03: logradouro e localidade er04: logradouro pr01: logradouro, cep e localidade pr02: logradouro e cep pr03: logradouro e localidade pr04: logradouro precisao: \"cep\" tipo_resultado: ec01: municipio, cep, localidade ec02: municipio, cep precisao: \"localidade\" tipo_resultado: eb01: municipio, localidade precisao: \"municipio\" tipo_resultado: em01: municipio Nota: categorias de match_type que começam com 'p' utilizam correspondência probabilística campo logradouro, enquanto os tipos que começam com 'e' utilizam apenas correspondência determinística. categorias de tipo_resultado que usam correspondência probabilística ainda não estão implementadas pacote geocodebr.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geolocaliza endereços no Brasil — geocode","text":"","code":"# ler amostra de dados data_path <- system.file(\"extdata/small_sample.csv\", package = \"geocodebr\") input_df <- read.csv(data_path)  fields <- geocodebr::definir_campos(   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   localidade = \"Bairro\",   municipio = \"nm_municipio\",   estado = \"nm_uf\" )  df <- geocodebr::geocode(   enderecos = input_df,   campos_endereco = fields,   verboso = FALSE   )  head(df) #>   id            nm_logradouro Numero       Cep               Bairro #> 1  1 Rua Maria Lucia Pacifico     17 26042-730           Santa Rita #> 2  2      Rua Leopoldina Tome     46 25030-050           Centenario #> 3  3          Rua Dona Judite      0 23915-700          Caputera II #> 4  4     Rua Alexandre Amaral      0 23098-120           Santissimo #> 5  5                Avenida E    300 23860-000         Praia Grande #> 6  6      Rua Princesa Isabel    263           Estacao Experimental #>      nm_municipio code_muni nm_uf        lat       lon tipo_resultado #> 1     Nova Iguacu   3303500    RJ -22.695496 -43.47118           en01 #> 2 Duque de Caxias   3301702    RJ -22.779174 -43.31134           en01 #> 3  Angra dos Reis   3300100    RJ -22.978837 -44.20848           er01 #> 4  Rio de Janeiro   3304557    RJ -22.868992 -43.51150           er01 #> 5     Mangaratiba   3302601    RJ -22.929864 -43.97214           en01 #> 6      Rio Branco   1200401    AC  -9.963436 -67.83559           en03 #>     precisao #> 1     numero #> 2     numero #> 3 logradouro #> 4 logradouro #> 5     numero #> 6     numero"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocodebr.html","id":null,"dir":"Reference","previous_headings":"","what":"geocodebr: Geolocalização de Endereços Brasileiros — geocodebr","title":"geocodebr: Geolocalização de Endereços Brasileiros — geocodebr","text":"Método simples e eficiente de geolocalizar dados Brasil. O pacote traz funções para geolocalizar endereços para encontrar suas em coordenadas espaciais e, em breve, para realizar geolocalização reversa de coordenadas espaciais para endereços. O pacote é baseado em conjuntos de dados espaciais abertos de endereços brasileiros, utilizando principalmente o Cadastro Nacional de Endereços para Fins Estatísticos (CNEFE). O CNEFE é publicado pelo Instituto Brasileiro de Geografia e Estatística (IBGE), órgão oficial de estatísticas e geografia Brasil.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/geocodebr/reference/geocodebr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"geocodebr: Geolocalização de Endereços Brasileiros — geocodebr","text":"Maintainer: Daniel Herszenhut dhersz@gmail.com (ORCID) Authors: Rafael H. M. Pereira (ORCID) contributors: Ipea - Instituto de Pesquisa Econômica Aplicada [copyright holder, funder]","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_dados_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Listar dados em cache — listar_dados_cache","title":"Listar dados em cache — listar_dados_cache","text":"Lista os dados salvos localmente na pasta de cache","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_dados_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Listar dados em cache — listar_dados_cache","text":"","code":"listar_dados_cache(print_tree = FALSE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_dados_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Listar dados em cache — listar_dados_cache","text":"print_tree Um valor lógico. Indica se o conteúdo da pasta de cache deve ser exibido em um formato de árvore. O padrão é FALSE.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_dados_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Listar dados em cache — listar_dados_cache","text":"O caminho para os arquivos em cache","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_dados_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Listar dados em cache — listar_dados_cache","text":"","code":"listar_dados_cache() #>  [1] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio.parquet\"                                  #>  [2] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_cep.parquet\"                              #>  [3] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_cep_localidade.parquet\"                   #>  [4] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_localidade.parquet\"                       #>  [5] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro.parquet\"                       #>  [6] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_cep.parquet\"                   #>  [7] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_cep_localidade.parquet\"        #>  [8] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_localidade.parquet\"            #>  [9] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_numero.parquet\"                #> [10] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_numero_cep.parquet\"            #> [11] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_numero_cep_localidade.parquet\" #> [12] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_numero_localidade.parquet\"      listar_dados_cache(print_tree = TRUE) #> /home/runner/.cache/R/geocodebr/data_release_v0.1.0 #> ├── municipio.parquet #> ├── municipio_cep.parquet #> ├── municipio_cep_localidade.parquet #> ├── municipio_localidade.parquet #> ├── municipio_logradouro.parquet #> ├── municipio_logradouro_cep.parquet #> ├── municipio_logradouro_cep_localidade.parquet #> ├── municipio_logradouro_localidade.parquet #> ├── municipio_logradouro_numero.parquet #> ├── municipio_logradouro_numero_cep.parquet #> ├── municipio_logradouro_numero_cep_localidade.parquet #> └── municipio_logradouro_numero_localidade.parquet"},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_pasta_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtém a pasta de cache usado no geocodebr — listar_pasta_cache","title":"Obtém a pasta de cache usado no geocodebr — listar_pasta_cache","text":"Obtém o caminho da pasta utilizada para armazenar em cache os dados geocodebr. Útil para inspecionar pasta configurada com definir_pasta_cache() em uma sessão anterior R. Retorna pasta de cache padrão caso nenhuma pasta personalizado tenha sido configurada anteriormente.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_pasta_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtém a pasta de cache usado no geocodebr — listar_pasta_cache","text":"","code":"listar_pasta_cache()"},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_pasta_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtém a pasta de cache usado no geocodebr — listar_pasta_cache","text":"O caminho da pasta de cache.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_pasta_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtém a pasta de cache usado no geocodebr — listar_pasta_cache","text":"","code":"listar_pasta_cache() #> [1] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0\""},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Update input_padrao_db to remove observations previously matched — update_input_db","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"Update input_padrao_db remove observations previously matched","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"","code":"update_input_db(con, update_tb = \"input_padrao_db\", reference_tb)"},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"con db connection update_tb String. Name table updated con reference_tb table written con used reference","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"Drops observations input_padrao_db","code":""}]
