[{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Introduction to geocodebr","text":"using {geocodebr}, please make sure installed computer. can download either stable version CRAN… … development version GitHub. attach current R session: main function package geocode(), takes data frame addresses input outputs data frame latitude longitude matched address, well two columns indicating precision level matches. demonstrate usage, package includes sample data sets installation. example , use small data set contains addresses commonly seen issues, missing information mistyped fields. Note: Running function first time may take , since {geocodebr} needs download CNEFE data, sums 5.5 GB. data stored locally, downloaded . info data caching . output coordinates use official geodetic reference system used Brazil: SIRGAS2000, CRS(4674). results {geocodebr} classified six broad precisao categories depending exactly input address matched CNEFE data. accuracy results indicated two columns output: precisao tipo_resultado. information .","code":"install.packages(\"geocodebr\") # install.packages(\"pak\") pak::pak(\"ipeaGIT/geocodebr\") library(geocodebr) df <- read.csv(   system.file(\"extdata/small_sample.csv\", package = \"geocodebr\") )  # Primeiro passo: inidicar o nome das colunas com cada campo dos enderecos campos <- geocodebr::listar_campos(   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   localidade = \"Bairro\",   municipio = \"nm_municipio\",   estado = \"nm_uf\"   )  # Segundo passo: geolocalizar df_geo <- geocodebr::geocode(   enderecos = df,   campos_endereco = campos,   resultado_completo = FALSE,   verboso = TRUE,   cache = TRUE,   n_cores = 1   ) #> ℹ Standardizing input addresses #> ℹ Looking for matches in CNEFE #> Matched addresses: 0/27 ■                                  0% - Looking for mat… #>  #> Matched addresses: 5/27 ■■■■■■■                           19% - Looking for mat… #>  #> Matched addresses: 7/27 ■■■■■■■■■                         26% - Looking for mat… #>  #> Matched addresses: 8/27 ■■■■■■■■■■                        30% - Looking for mat… #>  #> Matched addresses: 9/27 ■■■■■■■■■■■                       33% - Looking for mat… #>  #> Matched addresses: 10/27 ■■■■■■■■■■■■                      37% - Looking for ma… #>  #> Matched addresses: 11/27 ■■■■■■■■■■■■■                     41% - Looking for ma… #>  #> Matched addresses: 12/27 ■■■■■■■■■■■■■■                    44% - Looking for ma… #>  #> Matched addresses: 13/27 ■■■■■■■■■■■■■■■                   48% - Looking for ma… #>  #> Matched addresses: 17/27 ■■■■■■■■■■■■■■■■■■■■              63% - Looking for ma… #>  #> Matched addresses: 18/27 ■■■■■■■■■■■■■■■■■■■■■             67% - Looking for ma… #>  #> Matched addresses: 19/27 ■■■■■■■■■■■■■■■■■■■■■■            70% - Looking for ma… #>  #> Matched addresses: 20/27 ■■■■■■■■■■■■■■■■■■■■■■■           74% - Looking for ma… #>  #> Matched addresses: 23/27 ■■■■■■■■■■■■■■■■■■■■■■■■■■■       85% - Looking for ma… #>  #> Matched addresses: 24/27 ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      89% - Looking for ma… #>  #> Matched addresses: 25/27 ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■     93% - Looking for ma… #>  #> Matched addresses: 27/27 ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% - Done!   head(df_geo) #>   id            nm_logradouro Numero       Cep               Bairro #> 1  1 Rua Maria Lucia Pacifico     17 26042-730           Santa Rita #> 2  2      Rua Leopoldina Tome     46 25030-050           Centenario #> 3  3          Rua Dona Judite      0 23915-700          Caputera II #> 4  4     Rua Alexandre Amaral      0 23098-120           Santissimo #> 5  5                Avenida E    300 23860-000         Praia Grande #> 6  6      Rua Princesa Isabel    263           Estacao Experimental #>      nm_municipio code_muni nm_uf        lat       lon tipo_resultado #> 1     Nova Iguacu   3303500    RJ -22.695496 -43.47118           en01 #> 2 Duque de Caxias   3301702    RJ -22.779173 -43.31134           en01 #> 3  Angra dos Reis   3300100    RJ -22.978837 -44.20848           er01 #> 4  Rio de Janeiro   3304557    RJ -22.868992 -43.51150           er01 #> 5     Mangaratiba   3302601    RJ -22.929864 -43.97214           en01 #> 6      Rio Branco   1200401    AC  -9.963436 -67.83559           en03 #>     precisao #> 1     numero #> 2     numero #> 3 logradouro #> 4 logradouro #> 5     numero #> 6     numero"},{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"precision-categories","dir":"Articles","previous_headings":"","what":"Precision categories:","title":"Introduction to geocodebr","text":"results {geocodebr} classified six broad precisao categories: “numero” “numero_aproximado” “logradouro” “cep” “localidade” “municipio” NA (found) precision level can disaggregated refined match types.","code":""},{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"match-type","dir":"Articles","previous_headings":"Precision categories:","what":"Match Type","title":"Introduction to geocodebr","text":"column tipo_resultado provides refined information exactly input address matched CNEFE. every category, {geocodebr} takes average latitude longitude addresses included CNEFE match input address based combinations different fields. strictest case, example, function finds deterministic match fields given address (\"estado\", \"municipio\", \"logradouro\", \"numero\", \"cep\", \"localidade\"). Think example building several apartments match street address number. case, coordinates apartments differ slightly, {geocodebr} takes average coordinates. less rigorous example, fields (\"estado\", \"municipio\", \"logradouro\", \"localidade\") matched, {geocodebr} calculates average coordinates addresses CNEFE along street fall within neighborhood. complete list precision levels, corresponding match type categories fields considered category described : en01: logradouro, numero, cep e localidade en02: logradouro, numero e cep en03: logradouro, numero e localidade en04: logradouro e numero pn01: logradouro, numero, cep e localidade pn02: logradouro, numero e cep pn03: logradouro, numero e localidade pn04: logradouro e numero ei01: logradouro, numero, cep e localidade ei02: logradouro, numero e cep ei03: logradouro, numero e localidade ei04: logradouro e numero pi01: logradouro, numero, cep e localidade pi02: logradouro, numero e cep pi03: logradouro, numero e localidade pi04: logradouro e numero er01: logradouro, cep e localidade er02: logradouro e cep er03: logradouro e localidade er04: logradouro pr01: logradouro, cep e localidade pr02: logradouro e cep pr03: logradouro e localidade pr04: logradouro ec01: municipio, cep, localidade ec02: municipio, cep eb01: municipio, localidade em01: municipio Note: Match types starting ‘p’ use probabilistic matching logradouro field, types starting ‘e’ use deterministic matching . Match types probabilistic matching implemented {geocodebr} yet.","code":""},{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"data-cache","dir":"Articles","previous_headings":"","what":"Data cache","title":"Introduction to geocodebr","text":"first time user runs geocode() function, {geocodebr} download reference files store locally. way, data needs downloaded . Mind files require approximately 4GB space local drive. package includes following functions help users manage cached files: get_cache_dir(): returns path cached data stored. default, files cached package directory. set_cache_dir(): set custom directory used. configuration persistent across different R sessions. list_cached_data(): list files currently cached clean_cache_dir(): delete files cache directory used {geocodebr}","code":""},{"path":"https://ipeagit.github.io/geocodebr/articles/geocoding_pt.html","id":"geocodificação-de-endereços-para-coordenadas-espaciais","dir":"Articles","previous_headings":"","what":"Geocodificação: de endereços para coordenadas espaciais","title":"Geolocalização com geocodebr (PORT)","text":"Uma vez que você tenha uma tabela (data.frame) com endereços, geolocalização dos dados com {geocodebr} pode ser feita em dois passos simples: O primeiro passo é utilizar função listar_campos() para declarar os nomes das colunas seu data.frame que correspondem cada campo dos endereços. O segundo passo é utilizar função geocode() para encontrar coordenadas geográficas dos endereços de entrada. obs. Note que na primeira vez que o usuário usa essa fnução, {geocodebr} irá baixar alguns arquivos de referência e armaneza-los localmente. Assim, esses dados só precisam ser baixados uma única vez. Mais informações sobr o cache dos dados abaixo. coordendas espaciais output usam sistema de referência ofical Brasil: SIRGAS2000, CRS(4674). Os resultados {geocodebr} são classificados em seis amplas categorias de precisão, dependendo de quão exatamente cada endereço de entrada foi correspondido com os dados CNEFE. O grau de precisão é indicado em duas colunas da tabela de output: precision e match_type. Mais informações abaixo.","code":"library(geocodebr)  # leitura de dados de input input_df <- read.csv(system.file(\"extdata/small_sample.csv\", package = \"geocodebr\"))  # 1o passo: indicar nome das colunas correspondento aos campos de endereço fields <- geocodebr::listar_campos(   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   localidade = \"Bairro\",   municipio = \"nm_municipio\",   estado = \"nm_uf\"   ) # 2o passo: geolocalização df <- geocodebr::geocode(   enderecos = input_df,   campos_endereco = fields,   resultado_completo = FALSE,   verboso = TRUE,   cache = TRUE,   n_cores = 1   ) #> ℹ Standardizing input addresses #> ℹ Looking for matches in CNEFE #> Matched addresses: 0/27 ■                                  0% - Looking for mat… #>  #> Matched addresses: 5/27 ■■■■■■■                           19% - Looking for mat… #>  #> Matched addresses: 7/27 ■■■■■■■■■                         26% - Looking for mat… #>  #> Matched addresses: 8/27 ■■■■■■■■■■                        30% - Looking for mat… #>  #> Matched addresses: 9/27 ■■■■■■■■■■■                       33% - Looking for mat… #>  #> Matched addresses: 10/27 ■■■■■■■■■■■■                      37% - Looking for ma… #>  #> Matched addresses: 11/27 ■■■■■■■■■■■■■                     41% - Looking for ma… #>  #> Matched addresses: 12/27 ■■■■■■■■■■■■■■                    44% - Looking for ma… #>  #> Matched addresses: 13/27 ■■■■■■■■■■■■■■■                   48% - Looking for ma… #>  #> Matched addresses: 17/27 ■■■■■■■■■■■■■■■■■■■■              63% - Looking for ma… #>  #> Matched addresses: 18/27 ■■■■■■■■■■■■■■■■■■■■■             67% - Looking for ma… #>  #> Matched addresses: 19/27 ■■■■■■■■■■■■■■■■■■■■■■            70% - Looking for ma… #>  #> Matched addresses: 20/27 ■■■■■■■■■■■■■■■■■■■■■■■           74% - Looking for ma… #>  #> Matched addresses: 23/27 ■■■■■■■■■■■■■■■■■■■■■■■■■■■       85% - Looking for ma… #>  #> Matched addresses: 24/27 ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      89% - Looking for ma… #>  #> Matched addresses: 25/27 ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■     93% - Looking for ma… #>  #> Matched addresses: 27/27 ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% - Done!  head(df) #>   id            nm_logradouro Numero       Cep               Bairro #> 1  1 Rua Maria Lucia Pacifico     17 26042-730           Santa Rita #> 2  2      Rua Leopoldina Tome     46 25030-050           Centenario #> 3  3          Rua Dona Judite      0 23915-700          Caputera II #> 4  4     Rua Alexandre Amaral      0 23098-120           Santissimo #> 5  5                Avenida E    300 23860-000         Praia Grande #> 6  6      Rua Princesa Isabel    263           Estacao Experimental #>      nm_municipio code_muni nm_uf        lat       lon tipo_resultado #> 1     Nova Iguacu   3303500    RJ -22.695496 -43.47118           en01 #> 2 Duque de Caxias   3301702    RJ -22.779173 -43.31134           en01 #> 3  Angra dos Reis   3300100    RJ -22.978837 -44.20848           er01 #> 4  Rio de Janeiro   3304557    RJ -22.868992 -43.51150           er01 #> 5     Mangaratiba   3302601    RJ -22.929864 -43.97214           en01 #> 6      Rio Branco   1200401    AC  -9.963436 -67.83559           en03 #>     precisao #> 1     numero #> 2     numero #> 3 logradouro #> 4 logradouro #> 5     numero #> 6     numero"},{"path":"https://ipeagit.github.io/geocodebr/articles/geocoding_pt.html","id":"categorias-de-precisão-precision","dir":"Articles","previous_headings":"","what":"Categorias de Precisão: precision","title":"Geolocalização com geocodebr (PORT)","text":"Os resultados {geocodebr} são classificados em seis amplas categorias de precision: “numero” “numero_aproximado” “logradouro” “cep” “localidade” “municipio” NA (não encontrado) Cada nível de precisão pode ser desagregado em tipos de correspondência mais refinados.","code":""},{"path":"https://ipeagit.github.io/geocodebr/articles/geocoding_pt.html","id":"tipo-de-correspondência-tipo_resultado","dir":"Articles","previous_headings":"Categorias de Precisão: precision","what":"Tipo de Correspondência: tipo_resultado","title":"Geolocalização com geocodebr (PORT)","text":"coluna tipo_resultado fornece informações mais detalhadas sobre como exatamente cada endereço de entrada foi encontrado CNEFE. Em cada categoria, o {geocodebr} calcula média da latitude e longitude dos endereços incluídos CNEFE que correspondem ao endereço de entrada, com base em combinações de diferentes campos. caso mais rigoroso, por exemplo, função encontra uma correspondência determinística para todos os campos de um dado endereço (\"estado\", \"municipio\", \"logradouro\", \"numero\", \"cep\", \"localidade\"). Pense, por exemplo, em um prédio com vários apartamentos que correspondem ao mesmo endereço de rua e número. Nesse caso, coordenadas dos apartamentos podem diferir ligeiramente, e o {geocodebr} calcula média dessas coordenadas. Em um caso menos rigoroso, qual apenas os campos (\"estado\", \"municipio\", \"logradouro\", \"localidade\") são encontrados, o {geocodebr} calcula coordenadas médias de todos os endereços CNEFE ao longo daquela rua e que se encontram na mesma localidade/bairro. Assim, coordenadas de resultado tendem ser o ponto médio trecho daquela rua que passa dentro daquela localidade/bairro. lista completa dos níveis de precisão (precisao), suas categorias de tipo de correspondência (tipo_resultado) e os campos de endereço considerados em cada categoria estão descritos abaixo: en01: logradouro, numero, cep e localidade en02: logradouro, numero e cep en03: logradouro, numero e localidade en04: logradouro e numero pn01: logradouro, numero, cep e localidade pn02: logradouro, numero e cep pn03: logradouro, numero e localidade pn04: logradouro e numero ei01: logradouro, numero, cep e localidade ei02: logradouro, numero e cep ei03: logradouro, numero e localidade ei04: logradouro e numero pi01: logradouro, numero, cep e localidade pi02: logradouro, numero e cep pi03: logradouro, numero e localidade pi04: logradouro e numero er01: logradouro, cep e localidade er02: logradouro e cep er03: logradouro e localidade er04: logradouro pr01: logradouro, cep e localidade pr02: logradouro e cep pr03: logradouro e localidade pr04: logradouro ec01: municipio, cep, localidade ec02: municipio, cep eb01: municipio, localidade em01: municipio Nota: categorias de match_type que começam com ‘p’ utilizam correspondência probabilística campo logradouro, enquanto os tipos que começam com ‘e’ utilizam apenas correspondência determinística. categorias de match_type que usam correspondência probabilística ainda não estão implementados {geocodebr}.","code":""},{"path":"https://ipeagit.github.io/geocodebr/articles/geocoding_pt.html","id":"cache-de-dados","dir":"Articles","previous_headings":"","what":"Cache de Dados","title":"Geolocalização com geocodebr (PORT)","text":"Na primeira vez que o usuário executar função geocode(), o {geocodebr} irá baixar alguns arquivos de referência e armazená-los localmente. Dessa forma, os dados precisam ser baixados apenas uma vez. Vale lembrar que esses arquivos requerem aproximadamente 4GB de espaço seu disco local. O pacote inclui seguintes funções para ajudar os usuários gerenciar os arquivos em cache: get_cache_dir(): retorna o caminho para onde os dados em cache estão armazenados. Por padrão, os arquivos são armazenados diretório pacote. set_cache_dir(): define um diretório personalizado ser usado. Essa configuração é persistente entre diferentes sessões R. list_cached_data(): lista todos os arquivos atualmente armazenados em cache. clean_cache_dir(): exclui todos os arquivos diretório de cache usado pelo {geocodebr}.","code":""},{"path":"https://ipeagit.github.io/geocodebr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Herszenhut. Author, maintainer. Rafael H. M. Pereira. Author. Ipea - Institute Applied Economic Research. Copyright holder, funder.","code":""},{"path":"https://ipeagit.github.io/geocodebr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pereira RHM (2024). geocodebr: Download Data Brazil's Population Census.","code":"@Manual{,   title = {geocodebr: Download Data from Brazil's Population Census},   author = {Rafael H. M. Pereira},   year = {2024},   version = {v0.1.0}, }"},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"geocodebr","dir":"","previous_headings":"","what":"Geocode Brazilian Addresses with CNEFE","title":"Geocode Brazilian Addresses with CNEFE","text":"{geocodebr} package geocode data Brazil. provides simple efficient way geocode addresses spatial coordinates reverse-geocode spatial coordinates addresses. package builds open spatial data sets Brazilian addresses, mainly using National Registry Addresses Statistical Purposes (English Cadastro Nacional de Endereços para Fins Estatísticos, CNEFE). CNEFE published Brazilian official statistics Geography Office (IBGE) package currently available R.","code":""},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Geocode Brazilian Addresses with CNEFE","text":"package yet CRAN. can install development version :","code":"# install.packages(\"pak\") pak::pak(\"ipeaGIT/geocodebr\")"},{"path":[]},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"geocoding-from-addresses-to-spatial-coordinates","dir":"","previous_headings":"Basic Usage","what":"Geocoding: from addresses to spatial coordinates","title":"Geocode Brazilian Addresses with CNEFE","text":"table (data.frame) addresses, geolocating data {geocodebr} can done two simple steps: first step use setup_address_fields() function declare names columns input data.frame correspond field addresses. second step use geocode() function find geographic coordinates input addresses. results {geocodebr} classified six broad precision categories depending exactly input address matched CNEFE data. See information function documentation geocoding vignette.","code":"library(geocodebr)  # read input sample data input_df <- read.csv(system.file(\"extdata/small_sample.csv\", package = \"geocodebr\"))  # 1st step: indicate the columns describing the address fields fields <- geocodebr::setup_address_fields(   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   bairro = \"Bairro\",   municipio = \"nm_municipio\",   estado = \"nm_uf\"   )  # 2nd step: geocode df <- geocodebr::geocode(   addresses_table = input_df,   address_fields = fields,   n_cores = 1,   progress = FALSE   )"},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"reverse-geocoding-from-spatial-coordinates-to-addresses","dir":"","previous_headings":"Basic Usage","what":"Reverse-geocoding: from spatial coordinates to addresses","title":"Geocode Brazilian Addresses with CNEFE","text":"soon","code":""},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"related-projects","dir":"","previous_headings":"","what":"Related projects","title":"Geocode Brazilian Addresses with CNEFE","text":"numerous geolocation packages available, many can used R (list ). alternatives rely commercial software data sets, often imposing strict limits number free queries. contrast, main advantages {geocodebr} () completely free, allowing unlimited queries without cost; (b) operates high speed efficient scalability, allowing one geocode millions addresses just minutes without requiring advanced high-end computational infrastructure. {arcgisgeocode} {arcgeocoder}: interface ArcGIS Geocoding Services {nominatimlite}: geocode based OSM data {photon}: based OSM data {tidygeocoder}: interface several geocoding services {googleway} {mapsapi}: interface Google Maps APIs","code":""},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"acknowledgement-","dir":"","previous_headings":"","what":"Acknowledgement","title":"Geocode Brazilian Addresses with CNEFE","text":"Original CNEFE data collected Brazilian Institute Geography Statistics (IBGE). {geocodebr} developed team Institute Applied Economic Research (Ipea), Brazil.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a column with info of geocode match_type — add_precision_col","title":"Add a column with info of geocode match_type — add_precision_col","text":"Add column info geocode match_type","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a column with info of geocode match_type — add_precision_col","text":"","code":"add_precision_col(con, update_tb = NULL)"},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a column with info of geocode match_type — add_precision_col","text":"con db connection update_tb String. Name table updated con","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a column with info of geocode match_type — add_precision_col","text":"Adds new column table con","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely use arrow to open a Parquet file — arrow_open_dataset","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"function handles failure modes, including Parquet file corrupted.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"","code":"arrow_open_dataset(filename)"},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"filename local Parquet file","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"arrow::Dataset","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Message when caching file — cache_message","title":"Message when caching file — cache_message","text":"Message caching file","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Message when caching file — cache_message","text":"","code":"cache_message(   local_file = parent.frame()$local_file,   cache = parent.frame()$cache )"},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Message when caching file — cache_message","text":"local_file address file passed download_file function. cache Logical. Whether cached data used.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Message when caching file — cache_message","text":"message","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/clean_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean the cache directory used in geocodebr — clean_cache_dir","title":"Clean the cache directory used in geocodebr — clean_cache_dir","text":"Deletes files saved cache directory.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/clean_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean the cache directory used in geocodebr — clean_cache_dir","text":"","code":"clean_cache_dir()"},{"path":"https://ipeagit.github.io/geocodebr/reference/clean_cache_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean the cache directory used in geocodebr — clean_cache_dir","text":"Invisibly returns cache directory path.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/clean_cache_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean the cache directory used in geocodebr — clean_cache_dir","text":"","code":"if (FALSE) { # identical(TRUE, FALSE) clean_cache_dir() }"},{"path":"https://ipeagit.github.io/geocodebr/reference/create_geocodebr_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Build duckdb connection with CNEFE data set — create_geocodebr_db","title":"Build duckdb connection with CNEFE data set — create_geocodebr_db","text":"Builds duckdb connection CNEFE data set cache direcotry.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_geocodebr_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build duckdb connection with CNEFE data set — create_geocodebr_db","text":"","code":"create_geocodebr_db(db_path = \"tempdir\", n_cores = NULL)"},{"path":"https://ipeagit.github.io/geocodebr/reference/create_geocodebr_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build duckdb connection with CNEFE data set — create_geocodebr_db","text":"db_path Character. Defaults db_path = \"tempdir\" (default), duckdb connection created temporary directory. db_path = \"memory\", duckdb connection created RAM memory. n_cores Um número. O número de núcleos de CPU serem utilizados processamento dos dados. O padrão é 1.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_geocodebr_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build duckdb connection with CNEFE data set — create_geocodebr_db","text":"duckdb connection.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_index.html","id":null,"dir":"Reference","previous_headings":"","what":"create index — create_index","title":"create index — create_index","text":"create index","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create index — create_index","text":"","code":"create_index(con, tb, cols, operation, overwrite = TRUE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the CNEFE data set — download_cnefe","title":"Download the CNEFE data set — download_cnefe","text":"Downloads enriched version CNEFE (National Registry Addresses Statistical Purposes, portuguese) data set, purposefully built used package.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the CNEFE data set — download_cnefe","text":"","code":"download_cnefe(verboso = TRUE, cache = TRUE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the CNEFE data set — download_cnefe","text":"verboso logical. Whether display download progress bar. Defaults TRUE. cache Um valor lógico. Indica se os dados CNEFE devem ser salvos ou lidos cache, reduzindo o tempo de processamento em chamadas futuras. O padrão é TRUE. Quando FALSE, os dados CNEFE são baixados para um diretório temporário.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the CNEFE data set — download_cnefe","text":"Invisibly returns path directory data saved.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the CNEFE data set — download_cnefe","text":"","code":"download_cnefe(verboso = FALSE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":null,"dir":"Reference","previous_headings":"","what":"Geolocaliza endereços no Brasil — geocode","title":"Geolocaliza endereços no Brasil — geocode","text":"Geocodifica endereços brasileiros com base nos dados CNEFE. Os endereços de input devem ser passados como um data.frame, qual cada coluna descreve um campo endereço (logradouro, número, cep, etc). O resuldos dos endereços geolocalizados podem seguir diferentes níveis de precisão. Consulte abaixo seção \"Detalhes\" para mais informações. coordenadas de output utilizam o sistema de referência geodésico \"SIRGAS2000\", CRS(4674).","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geolocaliza endereços no Brasil — geocode","text":"","code":"geocode(   enderecos,   campos_endereco = listar_campos(),   resultado_completo = FALSE,   verboso = TRUE,   cache = TRUE,   n_cores = 1 )"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geolocaliza endereços no Brasil — geocode","text":"enderecos Um data.frame. Os endereços serem geolocalizados. Cada coluna deve representar um campo endereço. campos_endereco Um vetor de caracteres. correspondência entre cada campo de endereço e o nome da coluna que o descreve na tabela enderecos. função listar_campos() auxilia na criação deste vetor e realiza algumas verificações nos dados de entrada. Campos de endereço passados como NULL serão ignorados, e função deve receber pelo menos um campo não nulo, além  dos campos \"estado\" e \"municipio\", que são obrigatórios. Note que o campo  \"localidade\" é equivalente 'bairro'. resultado_completo Lógico. Indica se o output deve incluir colunas adicionais, como o endereço encontrado de referência. Por padrão, é FALSE. verboso Um valor lógico. Indica se barras de progresso e mensagens devem ser exibidas durante o download dos dados CNEFE e geocodificação dos endereços. O padrão é TRUE. cache Um valor lógico. Indica se os dados CNEFE devem ser salvos ou lidos cache, reduzindo o tempo de processamento em chamadas futuras. O padrão é TRUE. Quando FALSE, os dados CNEFE são baixados para um diretório temporário. n_cores Um número. O número de núcleos de CPU serem utilizados processamento dos dados. O padrão é 1.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geolocaliza endereços no Brasil — geocode","text":"Retorna o data.frame de input enderecos adicionado das colunas de latitude (lat) e longitude (lon), bem como colunas (precisao e tipo_resultado) que indicam o nível de precisão e o tipo de resultado.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geolocaliza endereços no Brasil — geocode","text":"Precisão dos resultados: Os resultados geocodebr são classificados em seis amplas categorias de precisao: \"numero\" \"numero_interpolado\" \"rua\" \"cep\" \"localidade\" \"municipio\" NA (não encontrado) Cada nível de precisão pode ser desagregado em tipos de correspondência mais refinados.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"tipos-de-resultados","dir":"Reference","previous_headings":"","what":"Tipos de resultados","title":"Geolocaliza endereços no Brasil — geocode","text":"coluna match_type fornece informações mais detalhadas sobre como exatamente cada endereço de entrada foi encontrado CNEFE. Em cada categoria,  o geocodebr calcula média da latitude e longitude dos endereços incluídos CNEFE que correspondem ao endereço de entrada, com base em combinações de diferentes campos. caso mais rigoroso, por exemplo, função encontra uma correspondência determinística para todos os campos de um dado endereço (\"estado\", \"municipio\", \"logradouro\", \"numero\", \"cep\", \"localidade\"). Pense, por exemplo, em um prédio com vários apartamentos que correspondem ao mesmo endereço de rua e número. Nesse caso, coordenadas dos apartamentos podem diferir ligeiramente, e o geocodebr calcula média dessas coordenadas. Em um caso menos rigoroso, qual apenas os campos (\"estado\", \"municipio\", \"logradouro\", \"localidade\") são encontrados, o geocodebr calcula coordenadas médias de todos os endereços CNEFE ao longo daquela rua e que se encontram na mesma localidade/bairro. Assim, coordenadas de resultado tendem ser o ponto médio trecho daquela rua que passa dentro daquela localidade/bairro. lista completa dos níveis de precisão (precisao), suas categorias de tipo de correspondência (tipo_resultado) e os campos de endereço considerados em cada categoria estão descritos abaixo: precisao: \"numero\" tipo_resultado: en01: logradouro, numero, cep e localidade en02: logradouro, numero e cep en03: logradouro, numero e localidade en04: logradouro e numero pn01: logradouro, numero, cep e localidade pn02: logradouro, numero e cep pn03: logradouro, numero e localidade pn04: logradouro e numero precisao: \"numero_aproximado\" tipo_resultado: ei01: logradouro, numero, cep e localidade ei02: logradouro, numero e cep ei03: logradouro, numero e localidade ei04: logradouro e numero pi01: logradouro, numero, cep e localidade pi02: logradouro, numero e cep pi03: logradouro, numero e localidade pi04: logradouro e numero precisao: \"logradouro\" (quando o número de entrada está faltando 'S/N') tipo_resultado: er01: logradouro, cep e localidade er02: logradouro e cep er03: logradouro e localidade er04: logradouro pr01: logradouro, cep e localidade pr02: logradouro e cep pr03: logradouro e localidade pr04: logradouro precisao: \"cep\" tipo_resultado: ec01: municipio, cep, localidade ec02: municipio, cep precisao: \"localidade\" tipo_resultado: eb01: municipio, localidade precisao: \"municipio\" tipo_resultado: em01: municipio Nota: categorias de match_type que começam com 'p' utilizam correspondência probabilística campo logradouro, enquanto os tipos que começam com 'e' utilizam apenas correspondência determinística. categorias de tipo_resultado que usam correspondência probabilística ainda não estão implementadas geocodebr.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geolocaliza endereços no Brasil — geocode","text":"","code":"# ler amostra de dados data_path <- system.file(\"extdata/small_sample.csv\", package = \"geocodebr\") input_df <- read.csv(data_path)  fields <- geocodebr::listar_campos(   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   localidade = \"Bairro\",   municipio = \"nm_municipio\",   estado = \"nm_uf\" )  df <- geocodebr::geocode(   enderecos = input_df,   campos_endereco = fields,   verboso = FALSE   )  head(df) #>   id            nm_logradouro Numero       Cep               Bairro #> 1  1 Rua Maria Lucia Pacifico     17 26042-730           Santa Rita #> 2  2      Rua Leopoldina Tome     46 25030-050           Centenario #> 3  3          Rua Dona Judite      0 23915-700          Caputera II #> 4  4     Rua Alexandre Amaral      0 23098-120           Santissimo #> 5  5                Avenida E    300 23860-000         Praia Grande #> 6  6      Rua Princesa Isabel    263           Estacao Experimental #>      nm_municipio code_muni nm_uf        lat       lon tipo_resultado #> 1     Nova Iguacu   3303500    RJ -22.695496 -43.47118           en01 #> 2 Duque de Caxias   3301702    RJ -22.779173 -43.31134           en01 #> 3  Angra dos Reis   3300100    RJ -22.978837 -44.20848           er01 #> 4  Rio de Janeiro   3304557    RJ -22.868992 -43.51150           er01 #> 5     Mangaratiba   3302601    RJ -22.929864 -43.97214           en01 #> 6      Rio Branco   1200401    AC  -9.963436 -67.83559           en03 #>     precisao #> 1     numero #> 2     numero #> 3 logradouro #> 4 logradouro #> 5     numero #> 6     numero"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocodebr.html","id":null,"dir":"Reference","previous_headings":"","what":"geocodebr: Geocode Brazilian Addresses with CNEFE — geocodebr","title":"geocodebr: Geocode Brazilian Addresses with CNEFE — geocodebr","text":"Simple efficient way geocode data Brazil. package provides functions geocode addresses spatial coordinates (soon) reverse-geocode spatial coordinates addresses. package built top open spatial data sets Brazilian addresses, mainly using National Registry Addresses Statistical Purposes (English *Cadastro Nacional de Endereços para Fins Estatísticos*, CNEFE). CNEFE published Brazilian official statistics geography office, IBGE (https://www.ibge.gov.br/estatisticas/sociais/populacao/38734-cadastro-nacional-de-enderecos-para-fins-estatisticos.html).","code":""},{"path":[]},{"path":"https://ipeagit.github.io/geocodebr/reference/geocodebr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"geocodebr: Geocode Brazilian Addresses with CNEFE — geocodebr","text":"Maintainer: Daniel Herszenhut dhersz@gmail.com (ORCID) Authors: Rafael H. M. Pereira (ORCID) contributors: Ipea - Institute Applied Economic Research [copyright holder, funder]","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/get_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the cache directory used in geocodebr — get_cache_dir","title":"Get the cache directory used in geocodebr — get_cache_dir","text":"Gets directory used cache CNEFE data. Useful inspect directory set set_cache_dir() previous R session. Returns default cache directory custom directory previously set.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/get_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the cache directory used in geocodebr — get_cache_dir","text":"","code":"get_cache_dir()"},{"path":"https://ipeagit.github.io/geocodebr/reference/get_cache_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the cache directory used in geocodebr — get_cache_dir","text":"cache directory path.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/get_cache_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the cache directory used in geocodebr — get_cache_dir","text":"","code":"get_cache_dir() #> [1] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0\""},{"path":"https://ipeagit.github.io/geocodebr/reference/list_cached_data.html","id":null,"dir":"Reference","previous_headings":"","what":"List cached data — list_cached_data","title":"List cached data — list_cached_data","text":"Lists data saved inside cached directory.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/list_cached_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List cached data — list_cached_data","text":"","code":"list_cached_data(print_tree = FALSE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/list_cached_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List cached data — list_cached_data","text":"print_tree logical. Whether print contents cache directory tree-like format. Defaults FALSE.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/list_cached_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List cached data — list_cached_data","text":"path cached data.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/list_cached_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List cached data — list_cached_data","text":"","code":"list_cached_data() #>  [1] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio.parquet\"                                  #>  [2] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_cep.parquet\"                              #>  [3] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_cep_localidade.parquet\"                   #>  [4] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_localidade.parquet\"                       #>  [5] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro.parquet\"                       #>  [6] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_cep.parquet\"                   #>  [7] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_cep_localidade.parquet\"        #>  [8] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_localidade.parquet\"            #>  [9] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_numero.parquet\"                #> [10] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_numero_cep.parquet\"            #> [11] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_numero_cep_localidade.parquet\" #> [12] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/municipio_logradouro_numero_localidade.parquet\"      list_cached_data(print_tree = TRUE) #> /home/runner/.cache/R/geocodebr/data_release_v0.1.0 #> ├── municipio.parquet #> ├── municipio_cep.parquet #> ├── municipio_cep_localidade.parquet #> ├── municipio_localidade.parquet #> ├── municipio_logradouro.parquet #> ├── municipio_logradouro_cep.parquet #> ├── municipio_logradouro_cep_localidade.parquet #> ├── municipio_logradouro_localidade.parquet #> ├── municipio_logradouro_numero.parquet #> ├── municipio_logradouro_numero_cep.parquet #> ├── municipio_logradouro_numero_cep_localidade.parquet #> └── municipio_logradouro_numero_localidade.parquet"},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_campos.html","id":null,"dir":"Reference","previous_headings":"","what":"Especifica as colunas que descrevem os campos dos endereços — listar_campos","title":"Especifica as colunas que descrevem os campos dos endereços — listar_campos","text":"Cria um vetor de caracteres especificando colunas que representam cada campo endereço na tabela de endereços. Os campos estado e municipio são obrigatórios.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_campos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Especifica as colunas que descrevem os campos dos endereços — listar_campos","text":"","code":"listar_campos(   estado,   municipio,   logradouro = NULL,   numero = NULL,   cep = NULL,   localidade = NULL )"},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_campos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Especifica as colunas que descrevem os campos dos endereços — listar_campos","text":"estado Uma string. O nome da coluna que representa o estado endereço. Campo obrigatório. municipio Uma string. O nome da coluna que representa o município endereço. Campo obrigatório. logradouro Uma string. O nome da coluna que representa o logradouro (endereço da rua) endereço. Pode ser NULL se o campo não estiver especificado na tabela de endereços. numero Uma string. O nome da coluna que representa o número endereço. Pode ser NULL se o campo não estiver especificado na tabela de endereços. cep Uma string. O nome da coluna que representa o CEP (Código de Endereçamento Postal) endereço. Pode ser NULL se o campo não estiver especificado na tabela de endereços. localidade Uma string. O nome da coluna que representa localidade (equivalente ao 'bairro' em áreas urbanas) endereço. Pode ser NULL se esse campo não estiver presente na tabela de endereços.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_campos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Especifica as colunas que descrevem os campos dos endereços — listar_campos","text":"Um vetor de caracteres qual os nomes são os campos endereço e os valores são colunas que os representam na tabela de endereços.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_campos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Especifica as colunas que descrevem os campos dos endereços — listar_campos","text":"","code":"listar_campos(   logradouro = \"Nome_logradouro\",   numero = \"Numero\",   cep = \"CEP\",   localidade = \"Bairro\",   municipio = \"Cidade\",   estado = \"UF\" ) #>        logradouro            numero               cep        localidade  #> \"Nome_logradouro\"          \"Numero\"             \"CEP\"          \"Bairro\"  #>         municipio            estado  #>          \"Cidade\"              \"UF\""},{"path":"https://ipeagit.github.io/geocodebr/reference/set_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the cache directory used in geocodebr — set_cache_dir","title":"Set the cache directory used in geocodebr — set_cache_dir","text":"Sets directory used cache CNEFE data. configuration persistent across different R sessions.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/set_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the cache directory used in geocodebr — set_cache_dir","text":"","code":"set_cache_dir(path = NULL)"},{"path":"https://ipeagit.github.io/geocodebr/reference/set_cache_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the cache directory used in geocodebr — set_cache_dir","text":"path string. path directory used cache data. NULL (default), package use versioned directory saved inside directory returned tools::R_user_dir().","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/set_cache_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the cache directory used in geocodebr — set_cache_dir","text":"Invisibly returns cache directory path.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/set_cache_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the cache directory used in geocodebr — set_cache_dir","text":"","code":"set_cache_dir(tempdir()) #> ℹ Setting cache directory to /tmp/RtmpEruVr9.  # back to default set_cache_dir(NULL) #> ℹ Setting cache directory to #>   /home/runner/.cache/R/geocodebr/data_release_v0.1.0."},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Update input_padrao_db to remove observations previously matched — update_input_db","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"Update input_padrao_db remove observations previously matched","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"","code":"update_input_db(con, update_tb = \"input_padrao_db\", reference_tb)"},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"con db connection update_tb String. Name table updated con reference_tb table written con used reference","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"Drops observations input_padrao_db","code":""}]
