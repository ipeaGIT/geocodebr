[{"path":"https://ipeagit.github.io/geocodebr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Herszenhut. Author, maintainer. Rafael H. M. Pereira. Author. Ipea - Institute Applied Economic Research. Copyright holder, funder.","code":""},{"path":"https://ipeagit.github.io/geocodebr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pereira RHM (2024). geocodebr: Download Data Brazil's Population Census.","code":"@Manual{,   title = {geocodebr: Download Data from Brazil's Population Census},   author = {Rafael H. M. Pereira},   year = {2024},   version = {v0.1.0}, }"},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"geocodebr","dir":"","previous_headings":"","what":"Geocode Brazilian Addresses with CNEFE","title":"Geocode Brazilian Addresses with CNEFE","text":"geocodebr package enables one geocode Brazilian addresses using National Registry Addresses Statistical Purposes (english Cadastro Nacional de Endereços para Fins Estatísticos, CNEFE). CNEFE published Brazilian official statistics geography office, IBGE.","code":""},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Geocode Brazilian Addresses with CNEFE","text":"package yet CRAN. can install development version :","code":"# install.packages(\"pak\") pak::pak(\"ipeaGIT/geocodebr\")"},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Geocode Brazilian Addresses with CNEFE","text":"Soon.","code":""},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"acknowledgement-","dir":"","previous_headings":"","what":"Acknowledgement","title":"Geocode Brazilian Addresses with CNEFE","text":"geocodebr developed team Institute Applied Economic Research (Ipea), Brazil.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_abbrev_state_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a column of state abbreviations — add_abbrev_state_col","title":"Add a column of state abbreviations — add_abbrev_state_col","text":"Add column state abbreviations","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_abbrev_state_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a column of state abbreviations — add_abbrev_state_col","text":"","code":"add_abbrev_state_col(con, update_tb = \"input_padrao_db\")"},{"path":"https://ipeagit.github.io/geocodebr/reference/add_abbrev_state_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a column of state abbreviations — add_abbrev_state_col","text":"con db connection update_tb String. Name table updated con","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_abbrev_state_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a column of state abbreviations — add_abbrev_state_col","text":"Adds new column table con","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a column with info of geocode match_type — add_precision_col","title":"Add a column with info of geocode match_type — add_precision_col","text":"Add column info geocode match_type","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a column with info of geocode match_type — add_precision_col","text":"","code":"add_precision_col(con, update_tb = NULL, match_type = NULL)"},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a column with info of geocode match_type — add_precision_col","text":"con db connection update_tb String. Name table updated con match_type Integer. integer","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a column with info of geocode match_type — add_precision_col","text":"Adds new column table con","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely use arrow to open a Parquet file — arrow_open_dataset","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"function handles failure modes, including Parquet file corrupted.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"","code":"arrow_open_dataset(filename)"},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"filename local Parquet file","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"arrow::Dataset","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Message when caching file — cache_message","title":"Message when caching file — cache_message","text":"Message caching file","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Message when caching file — cache_message","text":"","code":"cache_message(   local_file = parent.frame()$local_file,   cache = parent.frame()$cache )"},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Message when caching file — cache_message","text":"local_file address file passed download_file function. cache Logical. Whether cached data used.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Message when caching file — cache_message","text":"message","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/clean_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean the cache directory used in geocodebr — clean_cache_dir","title":"Clean the cache directory used in geocodebr — clean_cache_dir","text":"Removes files stored locally cache directory.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/clean_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean the cache directory used in geocodebr — clean_cache_dir","text":"","code":"clean_cache_dir()"},{"path":"https://ipeagit.github.io/geocodebr/reference/clean_cache_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean the cache directory used in geocodebr — clean_cache_dir","text":"message.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/clean_cache_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean the cache directory used in geocodebr — clean_cache_dir","text":"","code":"clean_cache_dir() #> Cached files from {geocodebr} have been deleted from /home/runner/.cache/R/geocodebr/data_release_v0.1.0"},{"path":"https://ipeagit.github.io/geocodebr/reference/create_geocodebr_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Build duckdb connection with CNEFE data set — create_geocodebr_db","title":"Build duckdb connection with CNEFE data set — create_geocodebr_db","text":"Builds duckdb connection CNEFE data set cache direcotry.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_geocodebr_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build duckdb connection with CNEFE data set — create_geocodebr_db","text":"","code":"create_geocodebr_db(db_path = tempdir(), n_cores = NULL)"},{"path":"https://ipeagit.github.io/geocodebr/reference/create_geocodebr_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build duckdb connection with CNEFE data set — create_geocodebr_db","text":"db_path character vector pointing existing directory persistent '.duckdb' file created. Defaults temporary directory tempdir(). n_cores number. number cores used parallel execution. Defaults 1.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_geocodebr_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build duckdb connection with CNEFE data set — create_geocodebr_db","text":"duckdb connection.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/geocodebr/reference/create_index.html","id":null,"dir":"Reference","previous_headings":"","what":"create index — create_index","title":"create index — create_index","text":"create index","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create index — create_index","text":"","code":"create_index(con, tb, cols, operation, overwrite = TRUE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the CNEFE data set — download_cnefe","title":"Download the CNEFE data set — download_cnefe","text":"Downloads enriched version CNEFE (National Registry Addresses Statistical Purposes, portuguese) data set, purposefully built used package.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the CNEFE data set — download_cnefe","text":"","code":"download_cnefe(state = \"all\", progress = TRUE, cache = TRUE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the CNEFE data set — download_cnefe","text":"state character vector. states whose CNEFE data downloaded. Either \"\" (default), case data states downloaded, vector states abbreviations (e.g. c(\"RJ\", \"DF\") download data Rio de Janeiro Federal District). progress logical. Whether display download progress bar. Defaults TRUE. cache logical. Whether CNEFE data saved /read cache, reducing processing time future calls. Defaults TRUE. FALSE, CNEFE data downloaded temporary directory.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the CNEFE data set — download_cnefe","text":"Invisibly returns path directory data saved.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the CNEFE data set — download_cnefe","text":"","code":"download_cnefe(state = \"AC\", progress = FALSE)  download_cnefe(state = c(\"AC\", \"AL\"), progress = FALSE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode Brazilian addresses — geocode","title":"Geocode Brazilian addresses — geocode","text":"Geocodes Brazilian addresses based CNEFE data. Addresses must passed data frame column describes one address field (street name, street number, neighborhood, etc). input addresses matched CNEFE following 12 different case patterns. info, please see Details section.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode Brazilian addresses — geocode","text":"","code":"geocode(   addresses_table,   address_fields = setup_address_fields(),   n_cores = 1,   progress = TRUE,   cache = TRUE )"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode Brazilian addresses — geocode","text":"addresses_table data frame. addresses geocoded. column must represent address field. address_fields character vector. correspondence address field name column describes addresses_table. setup_address_fields() function helps creating vector performs checks input. Address fields passed NULL ignored function must receive least one non-null field. manually creating vector, please note vector names names used setup_address_fields() parameters. n_cores number. number cores used parallel execution. Defaults 1. progress logical. Whether display progress bars downloading CNEFE data geocoding addresses. Defaults TRUE. cache logical. Whether CNEFE data saved /read cache, reducing processing time future calls. Defaults TRUE. FALSE, CNEFE data downloaded temporary directory.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode Brazilian addresses — geocode","text":"Returns data frame passed addresses_table latitude (lat) longitude (lon) matched address, well another column (match_type) indicating match level address matched.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geocode Brazilian addresses — geocode","text":"input addresses deterministically matched CNEFE following 12 different case patterns. type match found address input data indicated match_type column output. every match type, function always calculates average latitude longitude addresses CNEFE match input address. strictest case, function finds perfect match fields given address. Think example building several apartments match street address. case, coordinates apartments differ slightly, geocodebr take average coordinates. hand, loosest case, state city matched, geocodebr takes city-wide average coordinates, tends favor densely populated areas. columns considered 12 different match types described : Case 01: estado, município, logradouro, número, cep e bairro; Case 02: estado, município, logradouro, número e cep; Case 03: estado, município, logradouro, número e bairro; Case 04: estado, município, logradouro e número; Case 05: estado, município, logradouro, cep e bairro; Case 06: estado, município, logradouro e cep; Case 07: estado, município, logradouro e bairro; Case 08: estado, município e logradouro; Case 09: estado, município, cep e bairro; Case 10: estado, município e cep; Case 11: estado, município e bairro; Case 12: estado, município.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geocode Brazilian addresses — geocode","text":"","code":"data_path <- system.file(\"extdata/small_sample.csv\", package = \"geocodebr\") input_df <- read.csv(data_path)  fields <- setup_address_fields(   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   bairro = \"Bairro\",   municipio = \"nm_municipio\",   estado = \"nm_uf\" )  df <- geocode(input_df, address_fields = fields, progress = FALSE) df #> # A tibble: 28 × 12 #>       id Complemento code_muni nm_logradouro    Numero Cep   Bairro nm_municipio #>    <int> <chr>           <int> <chr>             <int> <chr> <chr>  <chr>        #>  1     1 CASA          3303500 RUA MARIA LUCIA…     17 2604… SANTA… NOVA IGUACU  #>  2     2 FUNDOS        3301702 RUA LEOPOLDINA …     46 2503… CENTE… DUQUE DE CA… #>  3     3 CASA          3300100 RUA DONA JUDITE       0 2391… CAPUT… ANGRA DOS R… #>  4     4 QUADRA        3304557 RUA ALEXANDRE A…      0 2309… SANTI… RIO DE JANE… #>  5     5 CASA          3302601 AVENIDA E           300 2386… PRAIA… MANGARATIBA  #>  6     6 APARTAMENTO   1200401 RUA PRINCESA IS…    263 6992… ESTAC… RIO BRANCO   #>  7     7 NA            1200203 CAMINHO SEM DEN…   2530 6998… MIRIT… CRUZEIRO DO… #>  8     8 NA            1200401 RUA DO LIMAO        268 6992… MOCIN… RIO BRANCO   #>  9     9 FUNDOS        1200401 RUA GERALDO MES…      0 6991… NOVA … RIO BRANCO   #> 10    10 NA            1200450 AVENIDA CASTELO…   3875 6992… DEMOC… SENADOR GUI… #> # ℹ 18 more rows #> # ℹ 4 more variables: nm_uf <chr>, match_type <chr>, lon <dbl>, lat <dbl>"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_rafa.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocoding addresses based on CNEFE data — geocode_rafa","title":"Geocoding addresses based on CNEFE data — geocode_rafa","text":"Takes data frame containing addresses input returns spatial coordinates found based CNEFE data.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_rafa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocoding addresses based on CNEFE data — geocode_rafa","text":"","code":"geocode_rafa(   addresses_table,   address_fields = setup_address_fields(),   n_cores = 1,   progress = TRUE,   cache = TRUE )"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_rafa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocoding addresses based on CNEFE data — geocode_rafa","text":"addresses_table data frame. addresses geocoded. column must represent address field. address_fields character vector. correspondence address field name column describes addresses_table. setup_address_fields() function helps creating vector performs checks input. Address fields passed NULL ignored function must receive least one non-null field. manually creating vector, please note vector names names used setup_address_fields() parameters. n_cores number. number cores used parallel execution. Defaults 1. progress logical. Whether display progress bars downloading CNEFE data geocoding addresses. Defaults TRUE. cache logical. Whether CNEFE data saved /read cache, reducing processing time future calls. Defaults TRUE. FALSE, CNEFE data downloaded temporary directory.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_rafa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocoding addresses based on CNEFE data — geocode_rafa","text":"arrow Dataset \"data.frame\" object.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_rafa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geocoding addresses based on CNEFE data — geocode_rafa","text":"","code":"data_path <- system.file(\"extdata/small_sample.csv\", package = \"geocodebr\") input_df <- read.csv(data_path)  fields <- setup_address_fields(   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   bairro = \"Bairro\",   municipio = \"nm_municipio\",   estado = \"nm_uf\" )  df <- geocodebr:::geocode_rafa(   addresses_table = input_df,   address_fields = fields,   progress = FALSE   ) #> Warning: NAs introduced by coercion  head(df) #>   id    logradouro_sem_numero numero       cep           localidade #> 1  1 RUA MARIA LUCIA PACIFICO     17 26042-730           SANTA RITA #> 2  2      RUA LEOPOLDINA TOME     46 25030-050           CENTENARIO #> 3  3          RUA DONA JUDITE      0 23915-700          CAPUTERA II #> 4  4     RUA ALEXANDRE AMARAL      0 23098-120           SANTISSIMO #> 5  5                AVENIDA E    300 23860-000         PRAIA GRANDE #> 6  6      RUA PRINCESA ISABEL    263 69921-026 ESTACAO EXPERIMENTAL #>         municipio estado       lon        lat match_type #> 1     NOVA IGUACU     RJ -43.47118 -22.695496          1 #> 2 DUQUE DE CAXIAS     RJ -43.31134 -22.779173          1 #> 3  ANGRA DOS REIS     RJ -44.20841 -22.978631         44 #> 4  RIO DE JANEIRO     RJ -43.51051 -22.869978         44 #> 5     MANGARATIBA     RJ -43.97214 -22.929864          1 #> 6      RIO BRANCO     AC -67.83559  -9.963436          1"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_rafa_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocoding addresses based on CNEFE data — geocode_rafa_arrow","title":"Geocoding addresses based on CNEFE data — geocode_rafa_arrow","text":"Takes data frame containing addresses input returns spatial coordinates found based CNEFE data.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_rafa_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocoding addresses based on CNEFE data — geocode_rafa_arrow","text":"","code":"geocode_rafa_arrow(   addresses_table,   address_fields = setup_address_fields(),   n_cores = 1,   progress = TRUE,   cache = TRUE )"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_rafa_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocoding addresses based on CNEFE data — geocode_rafa_arrow","text":"addresses_table data frame. addresses geocoded. column must represent address field. address_fields character vector. correspondence address field name column describes addresses_table. setup_address_fields() function helps creating vector performs checks input. Address fields passed NULL ignored function must receive least one non-null field. manually creating vector, please note vector names names used setup_address_fields() parameters. n_cores number. number cores used parallel execution. Defaults 1. progress logical. Whether display progress bars downloading CNEFE data geocoding addresses. Defaults TRUE. cache logical. Whether CNEFE data saved /read cache, reducing processing time future calls. Defaults TRUE. FALSE, CNEFE data downloaded temporary directory.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_rafa_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocoding addresses based on CNEFE data — geocode_rafa_arrow","text":"arrow Dataset \"data.frame\" object.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_rafa_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geocoding addresses based on CNEFE data — geocode_rafa_arrow","text":"","code":"data_path <- system.file(\"extdata/small_sample.csv\", package = \"geocodebr\") input_df <- read.csv(data_path)  fields <- setup_address_fields(   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   bairro = \"Bairro\",   municipio = \"nm_municipio\",   estado = \"nm_uf\" )  df <- geocodebr:::geocode_rafa_arrow(   addresses_table = input_df,   address_fields = fields,   progress = FALSE   ) #> Warning: NAs introduced by coercion #> Error: IOError: Cannot list directory 'C:/Users/r1701707/AppData/Local/R/cache/R/geocodebr/test_db/logradouro_numero_cep_localidade.parquet'. Detail: [errno 2] No such file or directory  head(df) #>                                                #> 1 function (x, df1, df2, ncp, log = FALSE)     #> 2 {                                            #> 3     if (missing(ncp))                        #> 4         .Call(C_df, x, df1, df2, log)        #> 5     else .Call(C_dnf, x, df1, df2, ncp, log) #> 6 }"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocodebr.html","id":null,"dir":"Reference","previous_headings":"","what":"geocodebr: Geocode Brazilian Addresses with CNEFE — geocodebr","title":"geocodebr: Geocode Brazilian Addresses with CNEFE — geocodebr","text":"Simple efficient way geocode data Brazil. package provides functions geocode addresses spatial coordinates reverse-geocode spatial coordinates addresses. package built top open spatial data sets Brazilian addresses, mainly using National Registry Addresses Statistical Purposes (English *Cadastro Nacional de Endereços para Fins Estatísticos*, CNEFE). CNEFE published Brazilian official statistics geography office, IBGE (https://www.ibge.gov.br/estatisticas/sociais/populacao/38734-cadastro-nacional-de-enderecos-para-fins-estatisticos.html).","code":""},{"path":[]},{"path":"https://ipeagit.github.io/geocodebr/reference/geocodebr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"geocodebr: Geocode Brazilian Addresses with CNEFE — geocodebr","text":"Maintainer: Daniel Herszenhut dhersz@gmail.com (ORCID) Authors: Rafael H. M. Pereira (ORCID) contributors: Ipea - Institute Applied Economic Research [copyright holder, funder]","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/get_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the cache directory used in geocodebr — get_cache_dir","title":"Get the cache directory used in geocodebr — get_cache_dir","text":"Gets directory used cache CNEFE data. Useful inspect directory set set_cache_dir() previous R session. Returns default cache directory custom directory previously set.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/get_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the cache directory used in geocodebr — get_cache_dir","text":"","code":"get_cache_dir()"},{"path":"https://ipeagit.github.io/geocodebr/reference/get_cache_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the cache directory used in geocodebr — get_cache_dir","text":"cache directory path.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/get_cache_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the cache directory used in geocodebr — get_cache_dir","text":"","code":"get_cache_dir() #> [1] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0\""},{"path":"https://ipeagit.github.io/geocodebr/reference/list_cached_data.html","id":null,"dir":"Reference","previous_headings":"","what":"List cached data — list_cached_data","title":"List cached data — list_cached_data","text":"Lists data saved inside cached directory.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/list_cached_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List cached data — list_cached_data","text":"","code":"list_cached_data(print_tree = FALSE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/list_cached_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List cached data — list_cached_data","text":"print_tree logical. Whether print contents cache directory tree-like format. Defaults FALSE.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/list_cached_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List cached data — list_cached_data","text":"path cached data.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/list_cached_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List cached data — list_cached_data","text":"","code":"list_cached_data() #> [1] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/estado=AC/part-0.parquet\" #> [2] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/estado=AL/part-0.parquet\" #> [3] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/estado=RJ/part-0.parquet\"  list_cached_data(print_tree = TRUE) #> /home/runner/.cache/R/geocodebr/data_release_v0.1.0 #> ├── estado=AC #> │   └── part-0.parquet #> ├── estado=AL #> │   └── part-0.parquet #> └── estado=RJ #>     └── part-0.parquet #> [1] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/estado=AC/part-0.parquet\" #> [2] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/estado=AL/part-0.parquet\" #> [3] \"/home/runner/.cache/R/geocodebr/data_release_v0.1.0/estado=RJ/part-0.parquet\""},{"path":"https://ipeagit.github.io/geocodebr/reference/match_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Match aggregated cases with left_join — match_cases","title":"Match aggregated cases with left_join — match_cases","text":"Match aggregated cases left_join","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/match_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match aggregated cases with left_join — match_cases","text":"","code":"match_cases(con, x, y, output_tb, key_cols, match_type)"},{"path":"https://ipeagit.github.io/geocodebr/reference/match_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match aggregated cases with left_join — match_cases","text":"con db connection x String. Name table written con y String. Name table written con output_tb Name new table written con key_cols Vector. Vector names columns perform left join match_type Integer. integer","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/match_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match aggregated cases with left_join — match_cases","text":"Writes result left join new table con","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/match_cases_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Match aggregated cases with left_join — match_cases_arrow","title":"Match aggregated cases with left_join — match_cases_arrow","text":"Match aggregated cases left_join","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/match_cases_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match aggregated cases with left_join — match_cases_arrow","text":"","code":"match_cases_arrow(   con,   x,   y,   output_tb,   key_cols,   match_type,   input_states,   input_municipio )"},{"path":"https://ipeagit.github.io/geocodebr/reference/match_cases_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match aggregated cases with left_join — match_cases_arrow","text":"con db connection x String. Name table written con y String. Name table written con output_tb Name new table written con key_cols Vector. Vector names columns perform left join match_type Integer. integer input_states Vector. Passed input_municipio Vector. Passed ","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/match_cases_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match aggregated cases with left_join — match_cases_arrow","text":"Writes result left join new table con","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/match_weighted_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Match aggregated cases with left_join — match_weighted_cases","title":"Match aggregated cases with left_join — match_weighted_cases","text":"Match aggregated cases left_join","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/match_weighted_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match aggregated cases with left_join — match_weighted_cases","text":"","code":"match_weighted_cases(con, x, y, output_tb, key_cols, match_type)"},{"path":"https://ipeagit.github.io/geocodebr/reference/match_weighted_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match aggregated cases with left_join — match_weighted_cases","text":"con db connection x String. Name table written con y String. Name table written con output_tb Name new table written con key_cols Vector. Vector names columns perform left join match_type Integer. integer","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/match_weighted_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match aggregated cases with left_join — match_weighted_cases","text":"Writes result left join new table con","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/match_weighted_cases_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Match aggregated cases with left_join — match_weighted_cases_arrow","title":"Match aggregated cases with left_join — match_weighted_cases_arrow","text":"Match aggregated cases left_join","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/match_weighted_cases_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match aggregated cases with left_join — match_weighted_cases_arrow","text":"","code":"match_weighted_cases_arrow(   con,   x,   y,   output_tb,   key_cols,   match_type,   input_states,   input_municipio )"},{"path":"https://ipeagit.github.io/geocodebr/reference/match_weighted_cases_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match aggregated cases with left_join — match_weighted_cases_arrow","text":"con db connection x String. Name table written con y String. Name table written con output_tb Name new table written con key_cols Vector. Vector names columns perform left join match_type Integer. integer input_states Vector. Passed input_municipio Vector. Passed ","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/match_weighted_cases_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match aggregated cases with left_join — match_weighted_cases_arrow","text":"Writes result left join new table con","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/set_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the cache directory used in geocodebr — set_cache_dir","title":"Set the cache directory used in geocodebr — set_cache_dir","text":"Sets directory used cache CNEFE data. configuration persistent across different R sessions.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/set_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the cache directory used in geocodebr — set_cache_dir","text":"","code":"set_cache_dir(path = NULL)"},{"path":"https://ipeagit.github.io/geocodebr/reference/set_cache_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the cache directory used in geocodebr — set_cache_dir","text":"path string. path directory used cache data. NULL (default), package use versioned directory saved inside directory returned tools::R_user_dir().","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/set_cache_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the cache directory used in geocodebr — set_cache_dir","text":"Invisibly returns cache directory path.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/set_cache_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the cache directory used in geocodebr — set_cache_dir","text":"","code":"set_cache_dir(tempdir()) #> ℹ Setting cache directory to /tmp/RtmpnLndRb.  # back to default set_cache_dir(NULL) #> ℹ Setting cache directory to #>   /home/runner/.cache/R/geocodebr/data_release_v0.1.0."},{"path":"https://ipeagit.github.io/geocodebr/reference/setup_address_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify the columns describing the address fields — setup_address_fields","title":"Specify the columns describing the address fields — setup_address_fields","text":"Creates character vector specifying columns represent address field addresses table.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/setup_address_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify the columns describing the address fields — setup_address_fields","text":"","code":"setup_address_fields(   logradouro = NULL,   numero = NULL,   cep = NULL,   bairro = NULL,   municipio = NULL,   estado = NULL )"},{"path":"https://ipeagit.github.io/geocodebr/reference/setup_address_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify the columns describing the address fields — setup_address_fields","text":"logradouro string. name column representing logradouro (street address) address. May NULL field specified addresses table. numero string. name column representing street number address. May NULL field specified addresses table. cep string. name column representing CEP (ZIP code) address. May NULL field specified addresses table. bairro string. name column representing neighborhood address. May NULL field specified addresses table. municipio string. name column representing city address. May NULL field specified addresses table. estado string. name column representing state address. May NULL field specified addresses table.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/setup_address_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify the columns describing the address fields — setup_address_fields","text":"character vector names address fields values columns represent addresses table.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/setup_address_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify the columns describing the address fields — setup_address_fields","text":"","code":"setup_address_fields(   logradouro = \"Nome_logradouro\",   numero = \"Numero\",   cep = \"CEP\",   bairro = \"Bairro\",   municipio = \"Cidade\",   estado = \"UF\" ) #>        logradouro            numero               cep            bairro  #> \"Nome_logradouro\"          \"Numero\"             \"CEP\"          \"Bairro\"  #>         municipio            estado  #>          \"Cidade\"              \"UF\""},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Update input_padrao_db to remove observations previously matched — update_input_db","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"Update input_padrao_db remove observations previously matched","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"","code":"update_input_db(con, update_tb = \"input_padrao_db\", reference_tb)"},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"con db connection update_tb String. Name table updated con reference_tb table written con used reference","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"Drops observations input_padrao_db","code":""},{"path":"https://ipeagit.github.io/geocodebr/news/index.html","id":"geocodebr-development-version","dir":"Changelog","previous_headings":"","what":"geocodebr (development version)","title":"geocodebr (development version)","text":"First version.","code":""}]
